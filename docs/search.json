[{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"/articles/imola-why-flex-and-grid.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Why CSS grid and flexbox matter","text":"’re around web development since 90s, might remember different web design used look. Solutions often complicated, hacky unintuitive work arounds common place, often considered best practices. web evolved, layout (styling) options available, maturing changing make used convoluted solutions simpler straightforward approaches. life CSS know now came ? page layouts setup? grid flexbox considered much better previous solutions, currently used side side instead one ? Join trip though time look web layouts evolved since beginning web current state art solutions now use.","code":""},{"path":"/articles/imola-why-flex-and-grid.html","id":"the-early-days-of-html","dir":"Articles","previous_headings":"","what":"The early days of HTML","title":"Why CSS grid and flexbox matter","text":"original proposals HTML started 1989, lasted February 1997, practical realisation HTML presentation screens. included published recommendations, browsers & development tools, actual web sites. point web developers mostly focused document sharing, elements focused much document requirements headers, fonts paragraphs. 1993, style sheet control layout proposed, still take time become mainstream. Around time (well reign tables layout purposes) HTML document structure dictated page layout, though need sequencial content, barely even considered. Early HTML specs state “elements within BODY element order presented reader”.","code":""},{"path":"/articles/imola-why-flex-and-grid.html","id":"html-tables","dir":"Articles","previous_headings":"","what":"HTML Tables","title":"Why CSS grid and flexbox matter","text":"1991 ViolaWWW grew sophisticated early Web browsers. claimed first browser support style sheets, tables, nest-able HTML elements. Followed 1993 proposal made “columns” presentation language web. proposal directly turn CSS. “styles defined specify recommended behaviour HTML objects terms : …. page layout … column ….”. initial works tables HMTL, finally 1997, HTML 3.2 finally released W3C Recommendation. stated tables “can used markup tabular material layout purposes”… oh boy people took literally. Tables became base web pages considered go structuring content. wild time invisible gifs used spacing, convoluted markup many terrifying things.","code":""},{"path":"/articles/imola-why-flex-and-grid.html","id":"floats-and-the-first-layout-frameworks","dir":"Articles","previous_headings":"","what":"Floats and the first layout frameworks","title":"Why CSS grid and flexbox matter","text":"Eventually new CSS property made way top, float. idea float simply, element need text wrap around , float element get exactly ! Simple right? Well… couple fixed size floated element, large dose space clearing techniques, CSS position property one achieve LOT. conclusion clever developers reached early 2000’s, allowing multi-column layouts created becoming go times. Eventually even frameworks started poping hide hacks behind css classes HTML structures, making life even easier. Bootstrap 3 great example framework , even now, can found millions websites (even though newest iteration, bootstrap 4, longer uses approach instead relies flexbox layout system).","code":""},{"path":"/articles/imola-why-flex-and-grid.html","id":"css-flex-flexbox","dir":"Articles","previous_headings":"","what":"CSS Flex (flexbox)","title":"Why CSS grid and flexbox matter","text":"introduction display: flex; property around 2012 real step forward, solving many existing layout problems making web developers designers generally quite happy. true first CSS property 100% developed focused layouts, making way modern web development quite fast. specially powerful page layouts can defined primarily terms either columns rows. instance, want align elements single row, display: flex; provide us modern easy way . , flex built control properties alignment viual order elements without change HTML markup directly. HTML becomes semantic based, specially release HTML 5, becomes even important since allows us fully decomple presentation layer content.","code":""},{"path":"/articles/imola-why-flex-and-grid.html","id":"css-grid","dir":"Articles","previous_headings":"","what":"CSS Grid","title":"Why CSS grid and flexbox matter","text":"moment time display: grid; CSS property intended building flexible responsive grid layouts. sort layout requires layout area can manipulated two dimensions – horizontally vertically – exactly CSS Grid . display: flex; gives full control either columns rows, Grid goes one step forward can handle rows columns, meaning always align items horizontal vertical tracks set . Grid mostly defined container, children flexbox.","code":""},{"path":"/articles/imola-why-flex-and-grid.html","id":"new-is-always-better-right","dir":"Articles","previous_headings":"","what":"New is always better… Right?","title":"Why CSS grid and flexbox matter","text":"Grid wins! Well, . Flexbox Grid serve different purposes incredibly useful. Sometimes flex best solution, sometimes grid makes simpler, sometimes works. Flex Grid also work well together, can easily put Flex element within Grid element vice versa. important thing decide case layout system best suited case. comes approach use, general rules make life easier:","code":""},{"path":"/articles/imola-why-flex-and-grid.html","id":"use-flex-when","dir":"Articles","previous_headings":"New is always better… Right?","what":"Use Flex when:","title":"Why CSS grid and flexbox matter","text":"Content priority Need horizontal vertical alignment Layout one-dimensional Need better older browser support","code":""},{"path":"/articles/imola-why-flex-and-grid.html","id":"use-grid-when","dir":"Articles","previous_headings":"New is always better… Right?","what":"Use Grid when:","title":"Why CSS grid and flexbox matter","text":"Things need set width regardless content Need two-dimensional layout (items one row column need align item previous row column) Elements need overlap common rule thumb use Grid full page layouts Flex everything else, consider whether component plan build one-dimensional (Flex) two-dimensional (Grid). depth dive Grid Flex, make sure check vignettes : vignette(\"imola-flexbox\") details Flex. vignette(\"imola-grid\") details Grid.","code":""},{"path":"/articles/imola-why-flex-and-grid.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Why CSS grid and flexbox matter","text":"’re interested details regarding story HTML CSS, make sure check: http://www.barrypearson.co.uk/articles/layout_tables/history.htm https://joom.team/en/-brief-history--html-css-layouting https://code-literacy.medium.com/css-layout-evolution-detailed--example-579b31475392","code":""},{"path":"/articles/imola.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"Tutorial: Getting started with imola","text":"bread butter imola gridPanel() flexPanel() functions. allow replace HTML tag serves container (div, section, main, nav, …) tag uses one specific css layout systems (grid flexbox). familiar layout systems, definitely recommend article get speed. basic difference CSS Grid Layout CSS Flexbox Layout flexbox designed layout one dimension - either row column. Grid designed two-dimensional layout - rows, columns time. means want fine control columns rows, aim using grid, care one dimensions, flex likely work just fine.","code":""},{"path":"/articles/imola.html","id":"grid","dir":"Articles","previous_headings":"Usage","what":"Grid","title":"Tutorial: Getting started with imola","text":"grid family focuses providing support CSS Grid standard. imola can find 2 functions allow create new grid component. gridPanel() gridPage(). gridPage() simply wrapper gridPanel() allows create page UI element without need using built shiny functions. ’re interested information full array options CSS grid standard CSS side, recommend article get started.","code":""},{"path":"/articles/imola.html","id":"flex","dir":"Articles","previous_headings":"Usage","what":"Flex","title":"Tutorial: Getting started with imola","text":"flex family focuses providing support CSS flexbox standard. imola can find 2 functions allow create new grid component. flexPanel() flexPage(). Similar happens grid family, flexPage() simply wrapper flexPanel() allows create page UI element without need using built shiny functions. ’re interested information full array options CSS flexbox standard CSS side, recommend article get started.","code":""},{"path":"/articles/imola.html","id":"breakpoints","dir":"Articles","previous_headings":"","what":"Breakpoints","title":"Tutorial: Getting started with imola","text":"Breakpoints way adjust layouts different screen sizes. screen size gets larger smaller, often required adjust position size different elements page make sure things dont appear broken place. Depending CSS framework used project, different systems place allow bit automated, familiar base shiny, might even used systems without realizing, using fluidRow() function. fluidRow() trigger layout changes columns specific screen sizes, based bootstrap 3 breakpoints (base CSS framework shiny). fluidRow() solution quite easy use, also comes many constrains allow fine control layout changes. complex enough layouts, might even required write additional CSS add new behavior specific elements screen sizes. Imola takes slightly different approach breakpoints; box uses breakpoints base shiny (bootstrap 3) function named attribute able pass either value attribute named list different values different breakpoints. practical example, lets say following grid areas gridPanel(): grid contains 3 areas (area1, area2, area3), area2 clearly serving sidebar. Viewing grid small screen lead small sidebar, one solution modify grid specifically breakpoint targets mobile. mentioned , shiny imola, default use bootstrap 3 breakpoint system, contains different breakpoints: Screenshot can see names imola expects using either activeBreakpoints() checking option directly getOption(\"imola.breakpoints\")$bootstrap case, want target small devices, target via xs, build grid argument named list instead. NOTE: Imola reserves special default name values used default, outside given breakpoint boundaries (default rule, breakpoints overwrite default specific screen sizes).","code":"# as a gridPanel() argument areas = c(   \"area1 area1 area1\",   \"area2 area3 area3\",   \"area2 area3 area3\" ) # or areas = list(   c(\"area1\", \"area1\", \"area1\"),   c(\"area2\", \"area3\", \"area3\"),   c(\"area2\", \"area3\", \"area3\") ) # as a gridPanel() argument areas = list(   default = c(     \"area1 area1 area1\",     \"area2 area3 area3\",     \"area2 area3 area3\"   ),   xs = c(     \"area1\",     \"area2\",     \"area3\"   ) )"},{"path":"/articles/imola.html","id":"templates","dir":"Articles","previous_headings":"","what":"Templates","title":"Tutorial: Getting started with imola","text":"often development also common multiple elements share layout. order easily reuse layout create, imola also includes simple template engine. order save template can use registerTemplate() function. function requires ‘type’ template (grid flex), name identify template later, named arguments can passed gridPanel flexPanel function (depending type) , optionally, breakpoint_system use plan adding responsive attributes template (breakpoint_system given, current active system used register template). template registered, can simple fill template argument panel page functions name template. can also adjust template specific panel providing named arguments addition template name. named argument exists template orewriten named argument function call. Lets say like save previous areas template, use . use registerTemplate(): can use template create multiple grid panels application: can register many templates want, keep mind type + name combo must unique. can also remove templates using unregisterTemplate() needed. full list registered templates, can use listTemplates(). default imola also includes ready use templates also listed listTemplates()","code":"#in global.R registerTemplate(\"grid\", \"mytemplate\",   areas = list(     default = c(       \"area1 area1 area1\",       \"area2 area3 area3\",       \"area2 area3 area3\"     ),     xs = c(       \"area1\",       \"area2\",       \"area3\"     )   ) ) #in ui.R gridPanel(   id = \"somePanel\"   template = \"mytemplate\"   area1 = div(\"area 1 content\"),   area2 = div(\"area 2 content\"),   area3 = div(\"area 3 content\"), )  gridPanel(   id = \"anotherPanel\"   template = \"mytemplate\"   area1 = div(\"different area 1 content\"),   area2 = div(\"different area 2 content\"),   area3 = div(\"different area 3 content\"), )"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Pedro Silva. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Silva P (2022). imola: CSS Layouts (Grid Flexbox) Implementation R/Shiny. R package version 0.4.0, https://github.com/pedrocoutinhosilva/imola.","code":"@Manual{,   title = {imola: CSS Layouts (Grid and Flexbox) Implementation for R/Shiny},   author = {Pedro Silva},   year = {2022},   note = {R package version 0.4.0},   url = {https://github.com/pedrocoutinhosilva/imola}, }"},{"path":"/index.html","id":"imola-","dir":"","previous_headings":"","what":"Imola - CSS layouts for R/Shiny","title":"Imola - CSS layouts for R/Shiny","text":"interface create grid flexbox CSS layouts R/Shiny dashboards directly R. Imola (named first city ever given technical blueprint Leonardo da Vinci) aims giving layout creation options directly R/shiny, without hassle create custom CSS every time.","code":""},{"path":"/index.html","id":"css-layouts-in-shiny-made-easy","dir":"","previous_headings":"","what":"CSS Layouts in shiny made easy","title":"Imola - CSS layouts for R/Shiny","text":"can now easily leverage typical CSS layouts (grid Flexbox) directly UI functions, including support media breakpoints fit different screen sizes devices.","code":""},{"path":"/index.html","id":"use-built-in-templates-or-create-your-own","dir":"","previous_headings":"","what":"Use built in templates, or create your own","title":"Imola - CSS layouts for R/Shiny","text":"Save favorite layouts later use via existing templating system simply use many elements need. layout creation isn’t thing, imola also comes built collection templates traditionally used web layouts, making even easier spice dashboards!","code":""},{"path":"/index.html","id":"demos","dir":"","previous_headings":"","what":"Demos","title":"Imola - CSS layouts for R/Shiny","text":"Built template layouts: https://sparktuga.shinyapps.io/imolatemplates/","code":""},{"path":[]},{"path":"/index.html","id":"1---install-the-package","dir":"","previous_headings":"","what":"Imola - CSS layouts for R/Shiny","title":"Imola - CSS layouts for R/Shiny","text":"","code":"# Install released version from CRAN install.packages('imola')  # Or the most recent development version from github: devtools::install_github('pedrocoutinhosilva/imola')"},{"path":"/index.html","id":"2---include-the-library-into-your-project","dir":"","previous_headings":"","what":"Imola - CSS layouts for R/Shiny","title":"Imola - CSS layouts for R/Shiny","text":"now ready go! Looking help start? Make sure check built examples vignettes help usage examples.","code":"# global.R library(imola)"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Imola - CSS layouts for R/Shiny","text":"Check vignette(\"imola\") get started, follow vignettes even information regarding css flexbox grid imola counterparts. Looking specific topic jump ? can use following vignettes quick start: vignette(\"imola-flexbox\") details flexPanel() flexPage(). vignette(\"imola-grid\") details gridPanel() gridPage(). vignette(\"imola-templates\") information using imola’s templating engine. vignette(\"imola-breakpoints\") information using imola’s breakpoint systems.","code":""},{"path":"/reference/activeBreakpoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Current active media breakpoints. By default the default_system\r\n  setting values are used, but the list can be customized by using the\r\n  registerBreakpoint() and unregisterBreakpoint() functions. — activeBreakpoints","title":"Current active media breakpoints. By default the default_system\r\n  setting values are used, but the list can be customized by using the\r\n  registerBreakpoint() and unregisterBreakpoint() functions. — activeBreakpoints","text":"Current active media breakpoints. default default_system   setting values used, list can customized using   registerBreakpoint() unregisterBreakpoint() functions.","code":""},{"path":"/reference/activeBreakpoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Current active media breakpoints. By default the default_system\r\n  setting values are used, but the list can be customized by using the\r\n  registerBreakpoint() and unregisterBreakpoint() functions. — activeBreakpoints","text":"","code":"activeBreakpoints()"},{"path":"/reference/activeBreakpoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Current active media breakpoints. By default the default_system\r\n  setting values are used, but the list can be customized by using the\r\n  registerBreakpoint() and unregisterBreakpoint() functions. — activeBreakpoints","text":"named list media breakpoints options.","code":""},{"path":"/reference/applyTemplate.html","id":null,"dir":"Reference","previous_headings":"","what":"Merges a set of attributes with a given template. To avoid redundanct\r\n  attributes being added to the final list, a list of default values (based\r\n  of the specific panel creation callback formals) is used to validate the\r\n  need of the argument value in the final list. — applyTemplate","title":"Merges a set of attributes with a given template. To avoid redundanct\r\n  attributes being added to the final list, a list of default values (based\r\n  of the specific panel creation callback formals) is used to validate the\r\n  need of the argument value in the final list. — applyTemplate","text":"Merges set attributes given template. avoid redundanct   attributes added final list, list default values (based   specific panel creation callback formals) used validate   need argument value final list.","code":""},{"path":"/reference/applyTemplate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merges a set of attributes with a given template. To avoid redundanct\r\n  attributes being added to the final list, a list of default values (based\r\n  of the specific panel creation callback formals) is used to validate the\r\n  need of the argument value in the final list. — applyTemplate","text":"","code":"applyTemplate(attributes, template, defaults, type)"},{"path":"/reference/applyTemplate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merges a set of attributes with a given template. To avoid redundanct\r\n  attributes being added to the final list, a list of default values (based\r\n  of the specific panel creation callback formals) is used to validate the\r\n  need of the argument value in the final list. — applyTemplate","text":"attributes manually given attribute values take priority merge. template name template merge, resulting value using makeTemplate() generate template object. defaults default values grid callback. type type css grid template.","code":""},{"path":"/reference/applyTemplate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merges a set of attributes with a given template. To avoid redundanct\r\n  attributes being added to the final list, a list of default values (based\r\n  of the specific panel creation callback formals) is used to validate the\r\n  need of the argument value in the final list. — applyTemplate","text":"named list css attributes can used generate html   element style rules given type.","code":""},{"path":"/reference/flexPage.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a page a with CSS flexbox layout — flexPage","title":"Create a page a with CSS flexbox layout — flexPage","text":"Create page CSS flexbox layout","code":""},{"path":"/reference/flexPage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a page a with CSS flexbox layout — flexPage","text":"","code":"flexPage(..., title = NULL, fill_page = TRUE, dependency = bootstrapLib())"},{"path":"/reference/flexPage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a page a with CSS flexbox layout — flexPage","text":"... Elements include within page title browser window title (defaults host URL page) fill_page Flag tell page adjust page adjust fill browser window size dependency set web dependencies. value can htmlDependency, example shiny bootstrap one (default) tagList diferent dependencies","code":""},{"path":"/reference/flexPage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a page a with CSS flexbox layout — flexPage","text":"UI definition can passed [shinyUI] function.","code":""},{"path":"/reference/flexPage.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create a page a with CSS flexbox layout — flexPage","text":"See   https://css-tricks.com/snippets/css/-guide--flexbox/   additional details using css flexbox","code":""},{"path":[]},{"path":"/reference/flexPage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a page a with CSS flexbox layout — flexPage","text":"","code":"if (interactive()) { library(imola) flexPage(   title = \"A flex page\",   div(class = \"area-1\"),   div(class = \"area-2\"),   div(class = \"area-3\") ) }"},{"path":"/reference/flexPanel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a panel with a CSS flexbox layout — flexPanel","title":"Create a panel with a CSS flexbox layout — flexPanel","text":"Create panel CSS flexbox layout","code":""},{"path":"/reference/flexPanel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a panel with a CSS flexbox layout — flexPanel","text":"","code":"flexPanel(   ...,   template = NULL,   direction = \"row\",   wrap = \"nowrap\",   justify_content = \"flex-start\",   align_items = \"stretch\",   align_content = \"flex-start\",   gap = 0,   flex = c(1),   grow = NULL,   shrink = NULL,   basis = NULL,   breakpoint_system = activeBreakpoints(),   id = generateID() )"},{"path":"/reference/flexPanel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a panel with a CSS flexbox layout — flexPanel","text":"... Elements include within panel template name template use base grid, resulting value using makeTemplate() generate template object. See listTemplates() registerTemplate() information. direction Direction flow elements panel. Accepts valid css 'flex-direction' value (row | row-reverse | column | column-reverse) default 'row' value used. Supports named list breakpoints. wrap elements allowed wrap multiple lines. Accepts valid css 'flex-wrap' value (nowrap | wrap | wrap-reverse). default value 'wrap' used. Supports named list breakpoints. justify_content Defines alignment along main axis. Accepts valid css 'justify-content' value (flex-start | flex-end | center | space-| space-around | space-evenly | start | end | left | right). default value 'flex-start' used. Supports named list breakpoints. align_items Defines default behavior flex items laid along cross axis current line. Accepts valid css 'align-items' value (stretch | flex-start | flex-end | center | baseline | first baseline | last baseline | start | end | self-start | self-end). default value 'stretch' used. Supports named list breakpoints. align_content Aligns flex container’s lines within extra space cross-axis. Accepts valid css align-content' value (flex-start | flex-end | center | space-| space-around | space-evenly | stretch | start | end | baseline | first baseline | last baseline). default value 'flex-start' used. Supports named list breakpoints. gap Defines space elements panel. Defaults 0. Supports named list breakpoints. flex vector valid css 'flex' values. Defines elements panel can grow shrink. entry vector afect nth child panel, meaning can maximum lenght elements panel. smaller vector repeated pattern affects elements panel. NA can also used entry vector skip adding rule specific elements. default c(1) used, meaning elements can grow shrink required, rate. See notes information. Supports named list breakpoints. grow vector valid css 'flex-grow' values. Defines rate elements can grow. Entries overwrite 'flex' values, can used make targeted rules. entry vector afect nth child panel, meaning can maximum lenght elements panel. smaller vector repeated pattern affects elements panel. NA can also used entry vector skip adding rule specific elements. default c() used, meaning values flex argument used. See notes information. Supports named list breakpoints. shrink vector valid css 'flex-shrink' values. Defines rate elements can shrink. Entries overwrite 'flex' values, can used make targeted rules. entry vector afect nth child panel, meaning can maximum lenght elements panel. smaller vector repeated pattern affects elements panel. NA can also used entry vector skip adding rule specific elements. default c() used, meaning values flex argument used. See notes information. Supports named list breakpoints. basis vector valid css 'flex-basis' values. Defines base size elements. Entries overwrite 'flex' values, can used make targeted rules. entry vector afect nth child panel, meaning can maximum lenght elements panel. smaller vector repeated pattern affects elements panel. NA can also used entry vector skip adding rule specific elements. default c() used, meaning values flex argument used. See notes information. Supports named list breakpoints. breakpoint_system Optional Media breakpoints use. default current active breakpoint system. id panel id. randomly generated one used default.","code":""},{"path":"/reference/flexPanel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a panel with a CSS flexbox layout — flexPanel","text":"HTML tagList.","code":""},{"path":"/reference/flexPanel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a panel with a CSS flexbox layout — flexPanel","text":"Behaves similar normal HTML div tags, simplifies   way css flexbox can used shiny.","code":""},{"path":"/reference/flexPanel.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create a panel with a CSS flexbox layout — flexPanel","text":"creating responsive layouts based media rules,   arguments named list can passed instead single value. names   list can registered breakpoints available   activeBreakpoints(). Breakpoints can also modified   registerBreakpoint() unregisterBreakpoint() functions. Arguments   allow : direction | wrap | justify_content | align_items |   align_content | gap | flex | grow | shrink | basis. See   https://css-tricks.com/snippets/css/-guide--flexbox/   additional details using css flexbox","code":""},{"path":[]},{"path":"/reference/flexPanel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a panel with a CSS flexbox layout — flexPanel","text":"","code":"if (interactive()) { library(imola) flexPanel(   div(\"example content\"),   div(\"example content\"),   div(\"example content\") ) }"},{"path":"/reference/generateCSSPropertyStyles.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates the requires css statements for a specific css property. It will\r\n  iterated over all breakpoints in the given value and return all statements\r\n  for all breakpoints in a vector format. — generateCSSPropertyStyles","title":"Generates the requires css statements for a specific css property. It will\r\n  iterated over all breakpoints in the given value and return all statements\r\n  for all breakpoints in a vector format. — generateCSSPropertyStyles","text":"Generates requires css statements specific css property.   iterated breakpoints given value return statements   breakpoints vector format.","code":""},{"path":"/reference/generateCSSPropertyStyles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates the requires css statements for a specific css property. It will\r\n  iterated over all breakpoints in the given value and return all statements\r\n  for all breakpoints in a vector format. — generateCSSPropertyStyles","text":"","code":"generateCSSPropertyStyles(value, property, id, breakpoint_system)"},{"path":"/reference/generateCSSPropertyStyles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates the requires css statements for a specific css property. It will\r\n  iterated over all breakpoints in the given value and return all statements\r\n  for all breakpoints in a vector format. — generateCSSPropertyStyles","text":"value Normalized attribute value list generate css . property type grid generate css . id id parent wrapper element. breakpoint_system Media breakpoints use.","code":""},{"path":"/reference/generateCSSPropertyStyles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates the requires css statements for a specific css property. It will\r\n  iterated over all breakpoints in the given value and return all statements\r\n  for all breakpoints in a vector format. — generateCSSPropertyStyles","text":"vector valid css strings.","code":""},{"path":"/reference/generateFlexChildrenCSS.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates all required css for a set of children attributes,\r\n  for a flex wrapper. — generateFlexChildrenCSS","title":"Generates all required css for a set of children attributes,\r\n  for a flex wrapper. — generateFlexChildrenCSS","text":"Generates required css set children attributes,   flex wrapper.","code":""},{"path":"/reference/generateFlexChildrenCSS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates all required css for a set of children attributes,\r\n  for a flex wrapper. — generateFlexChildrenCSS","text":"","code":"generateFlexChildrenCSS(attributes, id, number_children, breakpoint_system)"},{"path":"/reference/generateFlexChildrenCSS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates all required css for a set of children attributes,\r\n  for a flex wrapper. — generateFlexChildrenCSS","text":"attributes Normalized attribute list generate css . id id parent wrapper element. number_children Number child elements wrapper. Required generate rules flex elements. breakpoint_system Media breakpoints use.","code":""},{"path":"/reference/generateFlexChildrenCSS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates all required css for a set of children attributes,\r\n  for a flex wrapper. — generateFlexChildrenCSS","text":"string placeholders replaced.","code":""},{"path":"/reference/generateFlexCSS.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates all required css for a set of attributes, for a flex wrapper. — generateFlexCSS","title":"Generates all required css for a set of attributes, for a flex wrapper. — generateFlexCSS","text":"Generates required css set attributes, flex wrapper.","code":""},{"path":"/reference/generateFlexCSS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates all required css for a set of attributes, for a flex wrapper. — generateFlexCSS","text":"","code":"generateFlexCSS(attributes, id, number_children, breakpoint_system)"},{"path":"/reference/generateFlexCSS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates all required css for a set of attributes, for a flex wrapper. — generateFlexCSS","text":"attributes Normalized attribute list generate css . id id parent wrapper element. number_children Number child elements wrapper. Required generate rules flex elements. breakpoint_system Media breakpoints use.","code":""},{"path":"/reference/generateFlexCSS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates all required css for a set of attributes, for a flex wrapper. — generateFlexCSS","text":"string placeholders replaced.","code":""},{"path":"/reference/generateGridAreaCSS.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates the requires css statements for a specific set of grid areas. This\r\n  includes the css required to position each child element into each of the\r\n  named grid area. — generateGridAreaCSS","title":"Generates the requires css statements for a specific set of grid areas. This\r\n  includes the css required to position each child element into each of the\r\n  named grid area. — generateGridAreaCSS","text":"Generates requires css statements specific set grid areas.   includes css required position child element   named grid area.","code":""},{"path":"/reference/generateGridAreaCSS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates the requires css statements for a specific set of grid areas. This\r\n  includes the css required to position each child element into each of the\r\n  named grid area. — generateGridAreaCSS","text":"","code":"generateGridAreaCSS(areas, id)"},{"path":"/reference/generateGridAreaCSS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates the requires css statements for a specific set of grid areas. This\r\n  includes the css required to position each child element into each of the\r\n  named grid area. — generateGridAreaCSS","text":"areas Unique names areas css rules must generated. id id parent wrapper element.","code":""},{"path":"/reference/generateGridAreaCSS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates the requires css statements for a specific set of grid areas. This\r\n  includes the css required to position each child element into each of the\r\n  named grid area. — generateGridAreaCSS","text":"vector valid css strings.","code":""},{"path":"/reference/generateGridCSS.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates all required css for a set of attributes, for a grid wrapper. — generateGridCSS","title":"Generates all required css for a set of attributes, for a grid wrapper. — generateGridCSS","text":"Generates required css set attributes, grid wrapper.","code":""},{"path":"/reference/generateGridCSS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates all required css for a set of attributes, for a grid wrapper. — generateGridCSS","text":"","code":"generateGridCSS(attributes, id, unique_areas, breakpoint_system)"},{"path":"/reference/generateGridCSS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates all required css for a set of attributes, for a grid wrapper. — generateGridCSS","text":"attributes Normalized attribute list generate css . id id parent wrapper element. unique_areas Unique names areas grid contains. breakpoint_system Media breakpoints use.","code":""},{"path":"/reference/generateGridCSS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates all required css for a set of attributes, for a grid wrapper. — generateGridCSS","text":"string placeholders replaced.","code":""},{"path":"/reference/generateID.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a HTML valid ID.\r\nHTML IDs should follow specific standards:\r\n  - The ID must start with a letter (a-z or A-Z).\r\n  - All subsequent characters can be letters, numbers (0-9), hyphens (-),\r\n    underscores (_), colons (:), and periods (.).\r\n  - Each ID must be unique within the document. — generateID","title":"Generates a HTML valid ID.\r\nHTML IDs should follow specific standards:\r\n  - The ID must start with a letter (a-z or A-Z).\r\n  - All subsequent characters can be letters, numbers (0-9), hyphens (-),\r\n    underscores (_), colons (:), and periods (.).\r\n  - Each ID must be unique within the document. — generateID","text":"Generates HTML valid ID. HTML IDs follow specific standards:   - ID must start letter (-z -Z).   - subsequent characters can letters, numbers (0-9), hyphens (-),     underscores (_), colons (:), periods (.).   - ID must unique within document.","code":""},{"path":"/reference/generateID.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a HTML valid ID.\r\nHTML IDs should follow specific standards:\r\n  - The ID must start with a letter (a-z or A-Z).\r\n  - All subsequent characters can be letters, numbers (0-9), hyphens (-),\r\n    underscores (_), colons (:), and periods (.).\r\n  - Each ID must be unique within the document. — generateID","text":"","code":"generateID()"},{"path":"/reference/generateID.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a HTML valid ID.\r\nHTML IDs should follow specific standards:\r\n  - The ID must start with a letter (a-z or A-Z).\r\n  - All subsequent characters can be letters, numbers (0-9), hyphens (-),\r\n    underscores (_), colons (:), and periods (.).\r\n  - Each ID must be unique within the document. — generateID","text":"valid CSS id.","code":""},{"path":"/reference/gridPage.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a page a with CSS grid layout — gridPage","title":"Create a page a with CSS grid layout — gridPage","text":"Create page CSS grid layout","code":""},{"path":"/reference/gridPage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a page a with CSS grid layout — gridPage","text":"","code":"gridPage(..., title = NULL, fill_page = TRUE, dependency = bootstrapLib())"},{"path":"/reference/gridPage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a page a with CSS grid layout — gridPage","text":"... Elements include within page title browser window title (defaults host URL page). fill_page Flag tell page adjust page adjust fill browser window size. dependency set web dependencies. value can htmlDependency, example shiny bootstrap one (default) tagList diferent dependencies","code":""},{"path":"/reference/gridPage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a page a with CSS grid layout — gridPage","text":"UI definition can passed [shinyUI] function.","code":""},{"path":"/reference/gridPage.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create a page a with CSS grid layout — gridPage","text":"See   https://css-tricks.com/snippets/css/complete-guide-grid/   additional details using css grids","code":""},{"path":[]},{"path":"/reference/gridPage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a page a with CSS grid layout — gridPage","text":"","code":"if (interactive()) { library(imola) gridPage(   title = \"A grid page\",   areas = c(\"area-1 area-1\", \"area-2 area-3\"),   div(class = \"area-1\"),   div(class = \"area-2\"),   div(class = \"area-3\") ) }"},{"path":"/reference/gridPanel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a panel with a CSS grid layout — gridPanel","title":"Create a panel with a CSS grid layout — gridPanel","text":"Create panel CSS grid layout","code":""},{"path":"/reference/gridPanel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a panel with a CSS grid layout — gridPanel","text":"","code":"gridPanel(   ...,   template = NULL,   areas = NULL,   rows = NULL,   columns = NULL,   gap = NULL,   align_items = \"stretch\",   justify_items = \"stretch\",   auto_fill = TRUE,   breakpoint_system = activeBreakpoints(),   id = generateID() )"},{"path":"/reference/gridPanel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a panel with a CSS grid layout — gridPanel","text":"... Elements include within panel. areas used, named named arguments using grid area name added grid area. named arguments areas used, non attribute elements added existing grid cells based order. template name template use base grid, resulting value using makeTemplate() generate template object. See listTemplates() registerTemplate() information. areas list vectors area names, vector strings representing row grid. element contain names, per row, area grid. Expected values follow convension grid-template-areas css attribute. example c(\"area-1 area-1\", \"area-2 area-3\") list(c(\"area-1\", \"area-1\"), c(area-2\", \"area-3\")) valid representations 2x2 grid 3 named areas. using breakpoints, named list valid values name valid breakpoint can used well. example list( default = c(\"area-1\", \"area-2\"), xs = list(c(\"area-1\"), c(\"area-2\"))) valid value breakpoints rows string css valid sizes separated space. vector sizes. example \"1fr 2fr\" c(\"1fr\", \"2fr\") valid representations 2 rows grid sizes. Follows convension grid-template-rows css attribute. provided existing space split equally acording areas defined areas. Supports named list breakpoints. columns string css valid sizes separated space. vector sizes. example \"1fr 2fr\" c(\"1fr\", \"2fr\") valid representations 2 columns grid sizes. Follows convension grid-template-columns css attribute. provided existing space split equally acording areas defined areas. Supports named list breakpoints. gap space (valid css size) grid cell. Supports named list breakpoints. align_items cell behavior according align-items css property. Defaults stretch. Supports named list breakpoints. justify_items cell behavior according justify-items css property. Defaults stretch. Supports named list breakpoints. auto_fill panel stretch fit parent size (TRUE), size based children element sizes (FALSE). breakpoint_system Optional Media breakpoints use. default current active breakpoint system. id html id panel container.","code":""},{"path":"/reference/gridPanel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a panel with a CSS grid layout — gridPanel","text":"HTML tagList.","code":""},{"path":"/reference/gridPanel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a panel with a CSS grid layout — gridPanel","text":"Behaves similar normal HTML div tags, simplifies   way css grid can used via arguments area, rows columns.   areas required, used rows columns simply split   existing space equaly row / column.   Internally function creates styles grid positions   generating rules positioning children via classes.   position child element simply make sure includes class   name named area.","code":""},{"path":"/reference/gridPanel.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create a panel with a CSS grid layout — gridPanel","text":"creating responsive layouts based media rules, arguments   named list can passed instead single value. names list   can registered breakpoints available activeBreakpoints().   Breakpoints can also modified registerBreakpoint()   unregisterBreakpoint() functions. Arguments allow : areas |   rows | columns | gap. See https://css-tricks.com/snippets/css/complete-guide-grid/   additional details using css grids","code":""},{"path":[]},{"path":"/reference/gridPanel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a panel with a CSS grid layout — gridPanel","text":"","code":"if (interactive()) { library(imola) gridPanel(   areas = c(\"area-1 area-1\", \"area-2 area-3\"),   rows = \"1fr 2fr\",   columns = \"2fr 100px\",   div(class = \"area-1\"),   div(class = \"area-2\"),   div(class = \"area-3\") ) }"},{"path":"/reference/listTemplates.html","id":null,"dir":"Reference","previous_headings":"","what":"Lists all available grid and flex templates. If type is given, returns only\r\n  templates for the given grid type. Templates are collections of\r\n  arguments that can be grouped and stored for later usage via the ","title":"Lists all available grid and flex templates. If type is given, returns only\r\n  templates for the given grid type. Templates are collections of\r\n  arguments that can be grouped and stored for later usage via the ","text":"Lists available grid flex templates. type given, returns   templates given grid type. Templates collections   arguments can grouped stored later usage via \"template\"   argument panel page functions.","code":""},{"path":"/reference/listTemplates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lists all available grid and flex templates. If type is given, returns only\r\n  templates for the given grid type. Templates are collections of\r\n  arguments that can be grouped and stored for later usage via the ","text":"","code":"listTemplates(type = NULL)"},{"path":"/reference/listTemplates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lists all available grid and flex templates. If type is given, returns only\r\n  templates for the given grid type. Templates are collections of\r\n  arguments that can be grouped and stored for later usage via the ","text":"type Optional argument type css templates return. value must either \"grid\" \"flex\". type given, templates types returned,","code":""},{"path":"/reference/listTemplates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lists all available grid and flex templates. If type is given, returns only\r\n  templates for the given grid type. Templates are collections of\r\n  arguments that can be grouped and stored for later usage via the ","text":"named list css templates specific values.","code":""},{"path":"/reference/makeTemplate.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns a imola template as an object for future use. Depending on the\r\n  given type, the template will then be available to be passed as an\r\n  argument to a panel or page function of that specific type. Templates are\r\n  collections of arguments that can be grouped and stored for later usage\r\n  via the ","title":"Returns a imola template as an object for future use. Depending on the\r\n  given type, the template will then be available to be passed as an\r\n  argument to a panel or page function of that specific type. Templates are\r\n  collections of arguments that can be grouped and stored for later usage\r\n  via the ","text":"Returns imola template object future use. Depending   given type, template available passed   argument panel page function specific type. Templates   collections arguments can grouped stored later usage   via \"template\" argument panel page functions.","code":""},{"path":"/reference/makeTemplate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns a imola template as an object for future use. Depending on the\r\n  given type, the template will then be available to be passed as an\r\n  argument to a panel or page function of that specific type. Templates are\r\n  collections of arguments that can be grouped and stored for later usage\r\n  via the ","text":"","code":"makeTemplate(type, ..., breakpoint_system = activeBreakpoints())"},{"path":"/reference/makeTemplate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns a imola template as an object for future use. Depending on the\r\n  given type, the template will then be available to be passed as an\r\n  argument to a panel or page function of that specific type. Templates are\r\n  collections of arguments that can be grouped and stored for later usage\r\n  via the ","text":"type type css grid template can used ... Collection valid arguments can passed panel given type (see gridPanel() FlexPanel() options) breakpoint_system Optional breakpoint system use template. default simply use current active system built custom system can also passed. ca find built breakpoint systems getOption(\"imola.breakpoints\") export file name export template . Allows exporting templates yaml file future usage.","code":""},{"path":"/reference/makeTemplate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns a imola template as an object for future use. Depending on the\r\n  given type, the template will then be available to be passed as an\r\n  argument to a panel or page function of that specific type. Templates are\r\n  collections of arguments that can be grouped and stored for later usage\r\n  via the ","text":"return value, called side effects","code":""},{"path":"/reference/mediaRuleTemplate.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a valid glue::glue string template for a css media query.\r\n  Used internally to generate a breakpoint specific wrapper. — mediaRuleTemplate","title":"Generates a valid glue::glue string template for a css media query.\r\n  Used internally to generate a breakpoint specific wrapper. — mediaRuleTemplate","text":"Generates valid glue::glue string template css media query.   Used internally generate breakpoint specific wrapper.","code":""},{"path":"/reference/mediaRuleTemplate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a valid glue::glue string template for a css media query.\r\n  Used internally to generate a breakpoint specific wrapper. — mediaRuleTemplate","text":"","code":"mediaRuleTemplate(options)"},{"path":"/reference/mediaRuleTemplate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a valid glue::glue string template for a css media query.\r\n  Used internally to generate a breakpoint specific wrapper. — mediaRuleTemplate","text":"options options required template. valid values given, non media query template created instead.","code":""},{"path":"/reference/mediaRuleTemplate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a valid glue::glue string template for a css media query.\r\n  Used internally to generate a breakpoint specific wrapper. — mediaRuleTemplate","text":"valid glue::glue template string processed later.","code":""},{"path":"/reference/normalizeAttribute.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts non named list attributes into a named list.\r\nDoes nothing if the attribute is already a list in the correct format. — normalizeAttribute","title":"Converts non named list attributes into a named list.\r\nDoes nothing if the attribute is already a list in the correct format. — normalizeAttribute","text":"Converts non named list attributes named list. nothing attribute already list correct format.","code":""},{"path":"/reference/normalizeAttribute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts non named list attributes into a named list.\r\nDoes nothing if the attribute is already a list in the correct format. — normalizeAttribute","text":"","code":"normalizeAttribute(attribute, simplify = TRUE)"},{"path":"/reference/normalizeAttribute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts non named list attributes into a named list.\r\nDoes nothing if the attribute is already a list in the correct format. — normalizeAttribute","text":"attribute value process simplify Boolean flag attribute simplified single strings.","code":""},{"path":"/reference/normalizeAttribute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts non named list attributes into a named list.\r\nDoes nothing if the attribute is already a list in the correct format. — normalizeAttribute","text":"named list.","code":""},{"path":"/reference/normalizeAttributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Applies the normalizeAttribute() function to a full attribute list. — normalizeAttributes","title":"Applies the normalizeAttribute() function to a full attribute list. — normalizeAttributes","text":"Applies normalizeAttribute() function full attribute list.","code":""},{"path":"/reference/normalizeAttributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Applies the normalizeAttribute() function to a full attribute list. — normalizeAttributes","text":"","code":"normalizeAttributes(attributes)"},{"path":"/reference/normalizeAttributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Applies the normalizeAttribute() function to a full attribute list. — normalizeAttributes","text":"attributes values process","code":""},{"path":"/reference/normalizeAttributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Applies the normalizeAttribute() function to a full attribute list. — normalizeAttributes","text":"named list.","code":""},{"path":"/reference/processContent.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds a css class to any HTML elements from the content that are named and\r\n  which name is in the areas vector for names. This allows content to be\r\n  assigned to the grid areas via named argument while still allowing other\r\n  generic HTML tag attributes to be used. — processContent","title":"Adds a css class to any HTML elements from the content that are named and\r\n  which name is in the areas vector for names. This allows content to be\r\n  assigned to the grid areas via named argument while still allowing other\r\n  generic HTML tag attributes to be used. — processContent","text":"Adds css class HTML elements content named   name areas vector names. allows content   assigned grid areas via named argument still allowing   generic HTML tag attributes used.","code":""},{"path":"/reference/processContent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds a css class to any HTML elements from the content that are named and\r\n  which name is in the areas vector for names. This allows content to be\r\n  assigned to the grid areas via named argument while still allowing other\r\n  generic HTML tag attributes to be used. — processContent","text":"","code":"processContent(content, areas)"},{"path":"/reference/processContent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds a css class to any HTML elements from the content that are named and\r\n  which name is in the areas vector for names. This allows content to be\r\n  assigned to the grid areas via named argument while still allowing other\r\n  generic HTML tag attributes to be used. — processContent","text":"content (named) list HTML elements. areas names content class added.","code":""},{"path":"/reference/processContent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds a css class to any HTML elements from the content that are named and\r\n  which name is in the areas vector for names. This allows content to be\r\n  assigned to the grid areas via named argument while still allowing other\r\n  generic HTML tag attributes to be used. — processContent","text":"list HTML elements.","code":""},{"path":"/reference/readSettingsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads the content of a YAML settings file from the package directory. — readSettingsFile","title":"Reads the content of a YAML settings file from the package directory. — readSettingsFile","text":"Reads content YAML settings file package directory.","code":""},{"path":"/reference/readSettingsFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads the content of a YAML settings file from the package directory. — readSettingsFile","text":"","code":"readSettingsFile(file)"},{"path":"/reference/readSettingsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads the content of a YAML settings file from the package directory. — readSettingsFile","text":"file file name read. Settings files stored package installation directory include diferent settings options.","code":""},{"path":"/reference/readSettingsFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads the content of a YAML settings file from the package directory. — readSettingsFile","text":"list object containing content settings YAML file","code":""},{"path":"/reference/registerBreakpoint.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds a new breakpoint entry to the currelty active media breakpoints. — registerBreakpoint","title":"Adds a new breakpoint entry to the currelty active media breakpoints. — registerBreakpoint","text":"Adds new breakpoint entry currelty active media breakpoints.","code":""},{"path":"/reference/registerBreakpoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds a new breakpoint entry to the currelty active media breakpoints. — registerBreakpoint","text":"","code":"registerBreakpoint(name, min = NULL, max = NULL)"},{"path":"/reference/registerBreakpoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds a new breakpoint entry to the currelty active media breakpoints. — registerBreakpoint","text":"name name entry remove min minimum screen width (pixels) rule active max maximum screen width (pixels) rule active","code":""},{"path":"/reference/registerBreakpoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds a new breakpoint entry to the currelty active media breakpoints. — registerBreakpoint","text":"return value, called side effects","code":""},{"path":"/reference/registerTemplate.html","id":null,"dir":"Reference","previous_headings":"","what":"Registers a new css template for future use. Depending on the given type,\r\n  the template will then be available to be passed as an argument to a panel\r\n  or page function of that specific type. Templates are collections of\r\n  arguments that can be grouped and stored for later usage via the ","title":"Registers a new css template for future use. Depending on the given type,\r\n  the template will then be available to be passed as an argument to a panel\r\n  or page function of that specific type. Templates are collections of\r\n  arguments that can be grouped and stored for later usage via the ","text":"Registers new css template future use. Depending given type,   template available passed argument panel   page function specific type. Templates collections   arguments can grouped stored later usage via \"template\"   argument panel page functions.","code":""},{"path":"/reference/registerTemplate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Registers a new css template for future use. Depending on the given type,\r\n  the template will then be available to be passed as an argument to a panel\r\n  or page function of that specific type. Templates are collections of\r\n  arguments that can be grouped and stored for later usage via the ","text":"","code":"registerTemplate(   type,   name,   ...,   breakpoint_system = activeBreakpoints(),   export = NULL )"},{"path":"/reference/registerTemplate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Registers a new css template for future use. Depending on the given type,\r\n  the template will then be available to be passed as an argument to a panel\r\n  or page function of that specific type. Templates are collections of\r\n  arguments that can be grouped and stored for later usage via the ","text":"type type css grid template can used name unique name template. template type name exists, simply overwritten. ... Collection valid arguments can passed panel given type (see gridPanel() FlexPanel() options) breakpoint_system Optional breakpoint system use template. default simply use current active system built custom system can also passed. ca find built breakpoint systems getOption(\"imola.breakpoints\") export file name export template . Allows exporting templates yaml file future usage.","code":""},{"path":"/reference/registerTemplate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Registers a new css template for future use. Depending on the given type,\r\n  the template will then be available to be passed as an argument to a panel\r\n  or page function of that specific type. Templates are collections of\r\n  arguments that can be grouped and stored for later usage via the ","text":"return value, called side effects","code":""},{"path":"/reference/setBreakpointSystem.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets the current active media breakpoints. By default the default_system\r\n  setting values are used, but the list can be customized by using the\r\n  registerBreakpoint() and unregisterBreakpoint() functions. — setBreakpointSystem","title":"Sets the current active media breakpoints. By default the default_system\r\n  setting values are used, but the list can be customized by using the\r\n  registerBreakpoint() and unregisterBreakpoint() functions. — setBreakpointSystem","text":"Sets current active media breakpoints. default default_system   setting values used, list can customized using   registerBreakpoint() unregisterBreakpoint() functions.","code":""},{"path":"/reference/setBreakpointSystem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets the current active media breakpoints. By default the default_system\r\n  setting values are used, but the list can be customized by using the\r\n  registerBreakpoint() and unregisterBreakpoint() functions. — setBreakpointSystem","text":"","code":"setBreakpointSystem(system)"},{"path":"/reference/setBreakpointSystem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sets the current active media breakpoints. By default the default_system\r\n  setting values are used, but the list can be customized by using the\r\n  registerBreakpoint() and unregisterBreakpoint() functions. — setBreakpointSystem","text":"system name media breakpoints system use. Existing systems can found getOption(\"imola.breakpoints\")","code":""},{"path":"/reference/setBreakpointSystem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sets the current active media breakpoints. By default the default_system\r\n  setting values are used, but the list can be customized by using the\r\n  registerBreakpoint() and unregisterBreakpoint() functions. — setBreakpointSystem","text":"named list media breakpoints options.","code":""},{"path":"/reference/stringCSSRule.html","id":null,"dir":"Reference","previous_headings":"","what":"Applies a CSS statement template stored in the package settings. These\r\n  templates use the htmlTemplate format, meaning placeholders are marked\r\n  using the placeholder convention.\r\n  Each placeholder value should be\r\n  passed as a named argument to the function using the placeholder value\r\n  as a name.\r\n  Used primarily as a shorthand to stringTemplate() for stored templates. — stringCSSRule","title":"Applies a CSS statement template stored in the package settings. These\r\n  templates use the htmlTemplate format, meaning placeholders are marked\r\n  using the placeholder convention.\r\n  Each placeholder value should be\r\n  passed as a named argument to the function using the placeholder value\r\n  as a name.\r\n  Used primarily as a shorthand to stringTemplate() for stored templates. — stringCSSRule","text":"Applies CSS statement template stored package settings.   templates use htmlTemplate format, meaning placeholders marked   using placeholder convention.   placeholder value   passed named argument function using placeholder value   name.   Used primarily shorthand stringTemplate() stored templates.","code":""},{"path":"/reference/stringCSSRule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Applies a CSS statement template stored in the package settings. These\r\n  templates use the htmlTemplate format, meaning placeholders are marked\r\n  using the placeholder convention.\r\n  Each placeholder value should be\r\n  passed as a named argument to the function using the placeholder value\r\n  as a name.\r\n  Used primarily as a shorthand to stringTemplate() for stored templates. — stringCSSRule","text":"","code":"stringCSSRule(template, ...)"},{"path":"/reference/stringCSSRule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Applies a CSS statement template stored in the package settings. These\r\n  templates use the htmlTemplate format, meaning placeholders are marked\r\n  using the placeholder convention.\r\n  Each placeholder value should be\r\n  passed as a named argument to the function using the placeholder value\r\n  as a name.\r\n  Used primarily as a shorthand to stringTemplate() for stored templates. — stringCSSRule","text":"template template name use. Available templates saved options, getOption(\"imola.settings\")$string_templates. ... Named arguments use template string. placeholders template must corresponding named argument.","code":""},{"path":"/reference/stringCSSRule.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Applies a CSS statement template stored in the package settings. These\r\n  templates use the htmlTemplate format, meaning placeholders are marked\r\n  using the placeholder convention.\r\n  Each placeholder value should be\r\n  passed as a named argument to the function using the placeholder value\r\n  as a name.\r\n  Used primarily as a shorthand to stringTemplate() for stored templates. — stringCSSRule","text":"valid CSS string.","code":""},{"path":"/reference/stringTemplate.html","id":null,"dir":"Reference","previous_headings":"","what":"Processes a string template in the htmlTemplate format into a valid string\r\n  with no placeholders. The string must use the htmlTemplate format, meaning\r\n  placeholders are marked using the placeholder convention. — stringTemplate","title":"Processes a string template in the htmlTemplate format into a valid string\r\n  with no placeholders. The string must use the htmlTemplate format, meaning\r\n  placeholders are marked using the placeholder convention. — stringTemplate","text":"Processes string template htmlTemplate format valid string   placeholders. string must use htmlTemplate format, meaning   placeholders marked using placeholder convention.","code":""},{"path":"/reference/stringTemplate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Processes a string template in the htmlTemplate format into a valid string\r\n  with no placeholders. The string must use the htmlTemplate format, meaning\r\n  placeholders are marked using the placeholder convention. — stringTemplate","text":"","code":"stringTemplate(string, ...)"},{"path":"/reference/stringTemplate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Processes a string template in the htmlTemplate format into a valid string\r\n  with no placeholders. The string must use the htmlTemplate format, meaning\r\n  placeholders are marked using the placeholder convention. — stringTemplate","text":"string string template. Uses format htmlTemplate() function shiny. placeholders template use placeholder format. ... Named arguments use template string. placeholders template must corresponding named argument.","code":""},{"path":"/reference/stringTemplate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Processes a string template in the htmlTemplate format into a valid string\r\n  with no placeholders. The string must use the htmlTemplate format, meaning\r\n  placeholders are marked using the placeholder convention. — stringTemplate","text":"string placeholders replaced.","code":""},{"path":"/reference/unregisterBreakpoint.html","id":null,"dir":"Reference","previous_headings":"","what":"Allows removing an entry from the current activeBreakpoints. — unregisterBreakpoint","title":"Allows removing an entry from the current activeBreakpoints. — unregisterBreakpoint","text":"Allows removing entry current activeBreakpoints.","code":""},{"path":"/reference/unregisterBreakpoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Allows removing an entry from the current activeBreakpoints. — unregisterBreakpoint","text":"","code":"unregisterBreakpoint(name)"},{"path":"/reference/unregisterBreakpoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Allows removing an entry from the current activeBreakpoints. — unregisterBreakpoint","text":"name name entry remove","code":""},{"path":"/reference/unregisterBreakpoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Allows removing an entry from the current activeBreakpoints. — unregisterBreakpoint","text":"return value, called side effects","code":""},{"path":"/reference/unregisterTemplate.html","id":null,"dir":"Reference","previous_headings":"","what":"Deletes an existing css template from the available list of templates for the\r\n  given grid type. Templates are collections of arguments\r\n  that can be grouped and stored for later usage via the ","title":"Deletes an existing css template from the available list of templates for the\r\n  given grid type. Templates are collections of arguments\r\n  that can be grouped and stored for later usage via the ","text":"Deletes existing css template available list templates   given grid type. Templates collections arguments   can grouped stored later usage via \"template\"   argument panel page functions.","code":""},{"path":"/reference/unregisterTemplate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deletes an existing css template from the available list of templates for the\r\n  given grid type. Templates are collections of arguments\r\n  that can be grouped and stored for later usage via the ","text":"","code":"unregisterTemplate(type, name)"},{"path":"/reference/unregisterTemplate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deletes an existing css template from the available list of templates for the\r\n  given grid type. Templates are collections of arguments\r\n  that can be grouped and stored for later usage via the ","text":"type type css grid template remove. name name tempalte remove.","code":""},{"path":"/reference/unregisterTemplate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deletes an existing css template from the available list of templates for the\r\n  given grid type. Templates are collections of arguments\r\n  that can be grouped and stored for later usage via the ","text":"return value, called side effects","code":""},{"path":"/reference/valueToCSS.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts a R List or vector object into a valid css string. Used primarily\r\n  to convert normalized attribute values into css values during processing. — valueToCSS","title":"Converts a R List or vector object into a valid css string. Used primarily\r\n  to convert normalized attribute values into css values during processing. — valueToCSS","text":"Converts R List vector object valid css string. Used primarily   convert normalized attribute values css values processing.","code":""},{"path":"/reference/valueToCSS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts a R List or vector object into a valid css string. Used primarily\r\n  to convert normalized attribute values into css values during processing. — valueToCSS","text":"","code":"valueToCSS(value, property)"},{"path":"/reference/valueToCSS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts a R List or vector object into a valid css string. Used primarily\r\n  to convert normalized attribute values into css values during processing. — valueToCSS","text":"value list vector values converted css property target css property value used.","code":""},{"path":"/reference/valueToCSS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts a R List or vector object into a valid css string. Used primarily\r\n  to convert normalized attribute values into css values during processing. — valueToCSS","text":"string containing valid css value.","code":""}]
