[{"path":"/articles/imola-breakpoints.html","id":"responsive-design","dir":"Articles","previous_headings":"","what":"Responsive design","title":"Breakpoint Systems","text":"term responsive design coined Ethan Marcotte 2010 described use multiple techniques: Fluid grids, something already explored Gillenwater, can read Marcotte’s article, Fluid Grids (published 2009 List Apart). Fluid images. Using simple technique setting max-width property 100%, images scale smaller containing column became narrower image’s intrinsic size, never grow larger. enables image scale fit flexibly-sized column, rather overflow . third key component media query. Media Queries enable type layout switch Cameron Adams previously explored using JavaScript, using CSS. Rather one layout screen sizes, layout changed. Sidebars repositioned smaller screen, alternate navigation displayed.","code":""},{"path":"/articles/imola-breakpoints.html","id":"media-queries","dir":"Articles","previous_headings":"","what":"Media Queries","title":"Breakpoint Systems","text":"Responsive design able emerge due media query. Media Queries Level 3 specification became Candidate Recommendation 2009, meaning deemed ready implementation browsers. Media Queries allow us run series tests (e.g. whether user’s screen greater certain width, certain resolution) apply CSS selectively style page appropriately user’s needs.","code":""},{"path":"/articles/imola-breakpoints.html","id":"breakpoints","dir":"Articles","previous_headings":"","what":"Breakpoints","title":"Breakpoint Systems","text":"defining set “points” Media Queries apply different rules, effectively creating breakpoints styling layout page changes. Many frontend frameworks reuse set tested tried breakpoints, making set breakpoints breakpoint system. Example bootstrap 5 breakpoints: - xs: Screen width 0 576px - sm: Screen width 576px - md: Screen width 768px - lg: Screen width 992px - xl: Screen width 1200px - xxl: Screen width 1400px Keep mind users expect website perfectly complementary every single device – desktop, tablet, mobile. website’s responsive design align certain device resolution (especially commonly used device), site risk missing segment target audience. Avoid investing time research defining breakpoints beginning project. amount effort goes defining responsive breakpoints directly proportional experience end-user.","code":""},{"path":"/articles/imola-breakpoints.html","id":"breakpoints-in-shiny","dir":"Articles","previous_headings":"","what":"Breakpoints in Shiny","title":"Breakpoint Systems","text":"familiar base shiny css based frameworks, might even used systems without realizing; example, using fluidRow() function trigger layout changes columns() specific screen sizes, based bootstrap 3 breakpoints (base CSS framework shiny). great done automatically, also comes many constrains allow fine control layout changes. often complex layouts, may often find writing additional CSS add new behavior specific elements screen sizes.","code":""},{"path":"/articles/imola-breakpoints.html","id":"breakpoints-with-imola","dir":"Articles","previous_headings":"","what":"Breakpoints with imola","title":"Breakpoint Systems","text":"Imola takes slightly different approach breakpoints: box uses breakpoint system base shiny (bootstrap 3). can change default breakpoint system application level, also component level. grid flex function named attribute able pass either value attribute named list different values different breakpoints. Names can used function attributes depend breakpoint names available, can use getBreakpointSystem() see active breakpoint system: Using getBreakpointSystem() name also allows us get specific registered breakpoint system, getBreakpointSystem(\"bulma\") returns diferent breakpoint system comes bundled imola: full list breakpoint systems can use listBreakpointSystems(). can use ? Lets say following gridPanel(): case, want use default breakpoint system target small devices, target via xs, build areas argument named list instead. can use default name default value areas argument. Think default value used screen sizes value can applied. default reserved keyword imola, keep mind use editing creating custom breakpoint system. Switching diferent breakpoint system change syntax slightly. can either change default global system setActiveBreakpointSystem(name) change specific gridPanel(). Changing global system affect panels currently using breakpoints, picking global system something adding breakpoints arguments. workaround can define diferent system panel : use available names system instead: case bulma system mobile first, meaning default apply mobile screen tablet screen width 769px. gridPanel() flexPanel() arguments affect styling panel allow behavior use breakpoints. See function documentation details.","code":"Imola Breakpoint System Name:  bootstrap3 description:  No description   Available Breakpoints (name)   Minimum screen size (px)   Maximum screen size (px) -----------------------------  -------------------------  ------------------------- xs                             NULL                       575 sm                             NULL                       767 md                             NULL                       991 lg                             NULL                       1199 xl                             1200                       NULL ----------------------------- Imola Breakpoint System Name:  bulma description:  No description   Available Breakpoints (name)   Minimum screen size (px)   Maximum screen size (px) -----------------------------  -------------------------  ------------------------- tablet                         769                        NULL desktop                        1024                       NULL widescreen                     1216                       NULL fullhd                         1408                       NULL ----------------------------- gridPanel(   areas = c(     \"area1 area1 area1\",     \"area2 area3 area3\",     \"area2 area3 area3\"   ),   ... ) gridPanel(   areas = list(     default = c(       \"area1 area1 area1\",       \"area2 area3 area3\",       \"area2 area3 area3\"     ),     xs = c(       \"area1\",       \"area2\",       \"area3\"     )   ),   ... ) gridPanel(   areas = c(     \"area1 area1 area1\",     \"area2 area3 area3\",     \"area2 area3 area3\"   ),   ...,   breakpoint_system = getBreakpointSystem(\"bulma\") ) gridPanel(   areas = list(     tablet = c(       \"area1 area1 area1\",       \"area2 area3 area3\",       \"area2 area3 area3\"     ),     default = c(       \"area1\",       \"area2\",       \"area3\"     )   ),   ...,   breakpoint_system = getBreakpointSystem(\"bulma\") )"},{"path":"/articles/imola-breakpoints.html","id":"extending-breakpoint-systems","dir":"Articles","previous_headings":"","what":"Extending breakpoint systems","title":"Breakpoint Systems","text":"also possible edit breakpoint system add remove breakpoints. must first retrive registered system using getBreakpointSystem(name). returns object version system, can now edit system adding removing breakpoints. create new breakpoint lets call breakpoint(): creates breakpoint can added system addBreakpoint(): can also remove breakpoint name using removeBreakpoint() creates breakpoint can added system addBreakpoint(): finish editing system can now use either object argument: register global usage: NOTE: Registering breakpoint system overwrite system name. like unregister breakpoint system, can also use unregisterBreakpointSystem().","code":"> obj <- getBreakpointSystem() > obj  Imola Breakpoint System Name:  bootstrap3 description:  No description   Available Breakpoints (name)   Minimum screen size (px)   Maximum screen size (px) -----------------------------  -------------------------  ------------------------- xs                             NULL                       575 sm                             NULL                       767 md                             NULL                       991 lg                             NULL                       1199 xl                             1200                       NULL ----------------------------- > breakpoint(\"mybreakpoint\", min = 300, max = 400) Imola Breakpoint Name:  mybreakpoint  Affect Screen Sizes: Minimum:  300 px Maximum:  400 px > obj <- addBreakpoint(obj, breakpoint(\"mybreakpoint\", min = 300, max = 400)) Imola Breakpoint System Name:  bootstrap3 description:  No description   Available Breakpoints (name)   Minimum screen size (px)   Maximum screen size (px) -----------------------------  -------------------------  ------------------------- xs                             NULL                       575 sm                             NULL                       767 md                             NULL                       991 lg                             NULL                       1199 xl                             1200                       NULL mybreakpoint                   300                        400 ----------------------------- > obj <- removeBreakpoint(obj, \"xl\") Imola Breakpoint System Name:  bootstrap3 description:  No description   Available Breakpoints (name)   Minimum screen size (px)   Maximum screen size (px) -----------------------------  -------------------------  ------------------------- xs                             NULL                       575 sm                             NULL                       767 md                             NULL                       991 lg                             NULL                       1199 mybreakpoint                   300                        400 ----------------------------- gridPanel(   ...,   breakpoint_system = obj ) registerBreakpointSystem(obj)  gridPanel(   ...,   breakpoint_system = getBreakpointSystem(\"bootstrap3\") )"},{"path":"/articles/imola-breakpoints.html","id":"creating-a-new-breakpoint-system","dir":"Articles","previous_headings":"","what":"Creating a new breakpoint system","title":"Breakpoint Systems","text":"Breakpoint systems can also created scratch using breakpointSystem() functionality add remove breakpoints, register unregister system, using argument value can also used object.","code":"> breakpointSystem(\"mysystem\", breakpoint(\"mybreakpoint\", min = 300, max = 400)) Imola Breakpoint System Name:  mysystem description:  No description   Available Breakpoints (name)   Minimum screen size (px)   Maximum screen size (px) -----------------------------  -------------------------  ------------------------- mybreakpoint                   300                        400 -----------------------------"},{"path":"/articles/imola-breakpoints.html","id":"importing-and-exporting","dir":"Articles","previous_headings":"","what":"Importing and Exporting","title":"Breakpoint Systems","text":"also possible import export breakpoint system objects future usage diferent projects. case can make use exportBreakpointSystem() importBreakpointSystem(). exportBreakpointSystem() allows export system object specific file. file contain necessary information rebuild system, even diferent project, can turned back template object using importBreakpointSystem(). importing functionality add remove breakpoints, register unregister system, using argument value can also used object.","code":""},{"path":"/articles/imola-breakpoints.html","id":"best-practices-for-adding-responsive-breakpoints","dir":"Articles","previous_headings":"","what":"Best Practices for adding Responsive Breakpoints","title":"Breakpoint Systems","text":"Develop mobile-first – developing designing mobile-first content, developer designer receive multiple benefits. difficult simplify desktop experience mobile screens expand mobile view desktop screens. design mobile-first, developers address necessary, can make additions match preferences desktop users. Always keep major breakpoints mind. usually means common screen sizes (480px, 768px, 1024px, 1280px). choosing major breakpoints, use website analytics discern commonly used devices site accessed. Add breakpoints screen sizes first. intelligent method hide display elements certain breakpoints. necessary, switch content features breakpoints. example, consider implementing -canvas navigation smaller screens typical navigation bar larger ones. Don’t define standard breakpoints responsive design basis device size. primary objective responsive design breakpoints display content best possible way. , let content guide. Add breakpoint content design requires .","code":""},{"path":"/articles/imola-flexbox.html","id":"available-arguments","dir":"Articles","previous_headings":"","what":"Available arguments","title":"Flex functions","text":"imola, main functions used generate flex containers flexPanel() flexPage(). ’s lot arguments going , lets go option can :","code":"flexPanel(   ...,   template = NULL,   direction = \"row\",   wrap = \"nowrap\",   justify_content = \"flex-start\",   align_items = \"stretch\",   align_content = \"flex-start\",   gap = 0,   flex = c(1),   grow = NULL,   shrink = NULL,   basis = NULL,   breakpoint_system = getBreakpointSystem(),   id = generateID() ) flexPage(   ..., # Any argument that can be passed to flexPanel()   title = NULL,   fill_page = TRUE,   dependency = bootstrapLib() )"},{"path":"/articles/imola-flexbox.html","id":"section","dir":"Articles","previous_headings":"","what":"…","title":"Flex functions","text":"Tag attributes (named arguments) children (unnamed arguments). named argument NA value rendered boolean attribute. Named arguments can used provide additional values container grid. Visit https://www.w3schools.com/tags/ref_attributes.asp list valid HTML attributes. Children may include combination : tags objects [HTML()] strings [htmlDependency()]s Single-element atomic vectors ... main purpose add content panel, can also used tweak HTML generation, allowing similar behavior traditional HTML tag functions provided htmltools, letting customize HTML tag. default using functions behaves similar using div(), additional styles added meet layout expectations. means ignore extra styling created imola, following call: generate following HTML:","code":"flexPanel(attribute = \"foo\", bar = NA, p(\"some content\")) <div attribute=\"foo\" bar>   <p>some content<\/p> <\/div>"},{"path":"/articles/imola-flexbox.html","id":"template","dir":"Articles","previous_headings":"","what":"template","title":"Flex functions","text":"name template use base grid, resulting value using gridTemplate() generate template object. passing string value template registered get error message. Valid template strings either built created using registerTemplate(). quick way see registered templates (flex functions) use names(listTemplates(\"flex\")): Templates register also become valid values template argument, also displayed listing available template names: listed template name can used value, regardless built custom:  Visit https://sparktuga.shinyapps.io/imolatemplates/ full list imola’s built templates. Note: See listTemplates() registerTemplate() documentation information functions, vignette(\"imola-templates\") full breakdown regarding templates imola.","code":"# names(listTemplates(\"flex\")) # Default built in flex templates  [1] \"one-three-alternate\" \"one-two-alternate\"   \"small-large-small\"   \"three-one-alternate\" \"three-row\"           \"three-two-alternate\" [7] \"two-one-alternate\"   \"two-row\"             \"two-three-alternate\" registerTemplate(\"flex\", \"mycustomtemplate\",   direction = \"column\" )  # names(listTemplates(\"flex\")) [1] \"one-three-alternate\" \"one-two-alternate\"   \"small-large-small\"   \"three-one-alternate\" \"three-row\"           \"three-two-alternate\" [7] \"two-one-alternate\"   \"two-row\"             \"two-three-alternate\" \"mycustomtemplate\" flexPanel(template = \"two-three-alternate\")"},{"path":"/articles/imola-flexbox.html","id":"direction","dir":"Articles","previous_headings":"","what":"direction","title":"Flex functions","text":"Direction flow elements panel. Accepts valid css flex-direction value (row | row-reverse | column | column-reverse). 1 2 3 4 5  default row value used. Supports named list breakpoints. See vignette(\"imola-breakpoints\") breakpoints.","code":""},{"path":"/articles/imola-flexbox.html","id":"wrap","dir":"Articles","previous_headings":"","what":"wrap","title":"Flex functions","text":"elements allowed wrap multiple lines. Accepts valid css flex-wrap value (nowrap | wrap | wrap-reverse). 1 2 3 4 5  default value wrap used. Supports named list breakpoints. See vignette(\"imola-breakpoints\") breakpoints.","code":""},{"path":"/articles/imola-flexbox.html","id":"justify_content","dir":"Articles","previous_headings":"","what":"justify_content","title":"Flex functions","text":"Defines alignment along main axis. Accepts valid css justify-content value (flex-start | flex-end | center | space-| space-around | space-evenly | start | end | left | right). 1 2 3 4 5  default value flex-start used. Supports named list breakpoints. See vignette(\"imola-breakpoints\") breakpoints. NOTE: Since imola uses flex = c(\"1\") default value flex, might see changes setting custom value justify_content box. can set flex = c(\"0 1 auto\") allow children elements control size main axis.","code":""},{"path":"/articles/imola-flexbox.html","id":"align_items","dir":"Articles","previous_headings":"","what":"align_items","title":"Flex functions","text":"Defines default behavior flex items laid along cross axis current line. Accepts valid css align-items value (stretch | flex-start | flex-end | center | baseline | first baseline | last baseline | start | end | self-start | self-end). 1 2 3 4 5  default value stretch used. Supports named list breakpoints. See vignette(\"imola-breakpoints\") breakpoints.","code":""},{"path":"/articles/imola-flexbox.html","id":"align_content","dir":"Articles","previous_headings":"","what":"align_content","title":"Flex functions","text":"Aligns flex container’s lines within extra space cross-axis. Accepts valid css align-content value (flex-start | flex-end | center | space-| space-around | space-evenly | stretch | start | end | baseline | first baseline | last baseline). 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  default value flex-start used. Supports named list breakpoints. See vignette(\"imola-breakpoints\") breakpoints. NOTE: Since imola uses flex = c(\"1\") default value flex, might see changes setting custom value align_content box. can set flex = c(\"0 1 auto\") allow children elements control size main axis. might also interested using wrap = wrap allow elements spawn multiple lines take full advantage align_content.","code":""},{"path":"/articles/imola-flexbox.html","id":"gap","dir":"Articles","previous_headings":"","what":"gap","title":"Flex functions","text":"Controls space items. applies spacing items outer edges. behavior thought minimum gutter, gutter bigger somehow (something like justify-content: space-;) gap take effect space end smaller. gap argument controls row gap column gap time, making css equivalent gap, row-gap column-gap. single value given used row column gap, pair values separated space can also used controlling independently. Accepts valid value css values (\"0\", \"10px\", \"20%\", \"0.5rem\"), pair values separated space (\"10px 20px\", \"5% 10%\", \"10px 5%\").  default value 0 used. Supports named list breakpoints. See vignette(\"imola-breakpoints\") breakpoints.","code":""},{"path":"/articles/imola-flexbox.html","id":"flex","dir":"Articles","previous_headings":"","what":"flex","title":"Flex functions","text":"vector valid css ‘flex’ values child elements. Shorthand grow, shrink basis, second third parameters optional. means combination 1, 2 3 css values grow, shrink basis valid. Arguments target child elements individually require vector values instead single value, entry vector affecting nth child element. example c(1, 2, 1) set flex value first child 1, second 2 third 1. given vector less entries number child elements, values repeated pattern affects elements panel. number entries given number child elements, exceeding entries ignored. NA can also used entry skip adding rule specific nth element. usually recommended use flex instead individual parameters, omitting , flex actually set values intelligently. example using flex value 1 actually equivalent 1 1 0% (grow = 1, shrink = 1, basis = 0%). 1 2 default value c(1) used, meaning value 1 every child. might notice different pure css default, makes sense context shiny dashboards. recover default css behavior, use c(\"0 1 auto\") value. Check following sections grow, shrink basis details. Supports named list breakpoints. See vignette(\"imola-breakpoints\") breakpoints.","code":""},{"path":"/articles/imola-flexbox.html","id":"grow","dir":"Articles","previous_headings":"","what":"grow","title":"Flex functions","text":"Defines ability flex item grow necessary. accepts unitless value serves proportion. dictates amount available space inside flex container item take . items flex-grow set 1, remaining space container distributed equally children. one children value 2, child take twice much space either one others (try, least). 1 2 3 4 5  default value NULL used, meaning defaults value provided flex argument, fallback 1 element.","code":""},{"path":"/articles/imola-flexbox.html","id":"shrink","dir":"Articles","previous_headings":"","what":"shrink","title":"Flex functions","text":"defines ability flex item shrink necessary. accepts unitless value serves proportion. dictates amount available space inside flex container item take . items flex-shrink set 1, elements shrink equal rate. one element larger shrink value, shrink faster rate elements (depending difference given values). 1 2 3 4 5  default value NULL used, meaning defaults value provided flex argument, fallback 1 element. Note: shrink effect, requires size (either width basis) set children elements.","code":""},{"path":"/articles/imola-flexbox.html","id":"basis","dir":"Articles","previous_headings":"","what":"basis","title":"Flex functions","text":"Defines default size element remaining space distributed. can length (e.g. 20%, 5rem, etc.) keyword. auto keyword means “look width height property use basis value calculations”  default value NULL used, meaning defaults value provided flex argument, meaning 0% element.","code":""},{"path":"/articles/imola-flexbox.html","id":"breakpoint_system","dir":"Articles","previous_headings":"","what":"breakpoint_system","title":"Flex functions","text":"Optional Media breakpoints use. default current active breakpoint system. arguments support breakpoints, instead simply passing value, can also provide named list valid values. names used list can registered breakpoints available provided breakpoint_system argument (defaults getBreakpointSystem()), well reserved keyword default. See vignette(\"imola-breakpoints\") details breakpoints.","code":""},{"path":"/articles/imola-flexbox.html","id":"id","dir":"Articles","previous_headings":"","what":"id","title":"Flex functions","text":"panel ID. randomly generated one used default. Providing ID allow target generated HTML tag via CSS JavaScript needed. General rules regarding HTML Ids apply, including fact duplicated Ids allowed. full list details HTML ID attribute, check https://www.w3schools.com/html/html_id.asp","code":""},{"path":"/articles/imola-flexbox.html","id":"title","dir":"Articles","previous_headings":"","what":"title","title":"Flex functions","text":"browser window title (defaults host URL page). name appears browser tab.","code":""},{"path":"/articles/imola-flexbox.html","id":"fill_page","dir":"Articles","previous_headings":"","what":"fill_page","title":"Flex functions","text":"Flag tell page adjust page adjust fill browser window size. set true force grid least tall available browser window. makes container stretch content smaller, still allowing grow beyond height viewport necessary.","code":""},{"path":"/articles/imola-flexbox.html","id":"dependency","dir":"Articles","previous_headings":"","what":"dependency","title":"Flex functions","text":"set web dependencies. value can htmlDependency, example shiny bootstrap one (default) [tagList] different dependencies. Useful using different UI framework package required dependencies (requires suppress bootstrap dependencies)","code":""},{"path":"/articles/imola-grid.html","id":"available-arguments","dir":"Articles","previous_headings":"","what":"Available arguments","title":"Grid functions","text":"imola, main functions used generate flex containers gridPanel() gridPage(). ’s lot arguments going , lets go option can :","code":"gridPanel(   ...,   template = NULL,   areas = NULL,   rows = NULL,   columns = NULL,   gap = NULL,   align_items = \"stretch\",   justify_items = \"stretch\",   auto_fill = TRUE,   breakpoint_system = getBreakpointSystem(),   id = generateID() ) gridPage(   ..., # Any argument that can be passed to gridPanel()   title = NULL,   fill_page = TRUE,   dependency = bootstrapLib() )"},{"path":"/articles/imola-grid.html","id":"concepts-and-terminology","dir":"Articles","previous_headings":"","what":"Concepts and Terminology","title":"Grid functions","text":"CSS Grid Layout introduces two-dimensional grid system CSS. Grids can used lay major page areas small user interface elements. grid can compared set horizontal vertical lines defining columns rows. Elements can placed onto grid within column row lines. can think table cell can identified via row column position, elements able span adjacent number cells.","code":""},{"path":"/articles/imola-grid.html","id":"grid-line","dir":"Articles","previous_headings":"Concepts and Terminology","what":"Grid Line","title":"Grid functions","text":"dividing lines make structure grid. can either vertical (“column grid lines”) horizontal (“row grid lines”) reside either side row column.","code":""},{"path":"/articles/imola-grid.html","id":"grid-track","dir":"Articles","previous_headings":"Concepts and Terminology","what":"Grid Track","title":"Grid functions","text":"space two adjacent grid lines. can think columns rows grid. size tracks can either fixed (using fixed size unit like pixels) flexible (using percentages new fr unit).","code":""},{"path":"/articles/imola-grid.html","id":"grid-cell","dir":"Articles","previous_headings":"Concepts and Terminology","what":"Grid Cell","title":"Grid functions","text":"space two adjacent row two adjacent column grid lines. ’s single “unit” grid.","code":""},{"path":"/articles/imola-grid.html","id":"grid-area","dir":"Articles","previous_headings":"Concepts and Terminology","what":"Grid Area","title":"Grid functions","text":"total space surrounded four grid lines. grid area may composed number grid cells, depending grid configured, identified bonding lines indexes name. grid area valid, cells MUST create rectangular area. Single cell areas also valid.","code":""},{"path":"/articles/imola-grid.html","id":"item-placement","dir":"Articles","previous_headings":"Concepts and Terminology","what":"Item placement","title":"Grid functions","text":"can place items precise location grid using line numbers, names targeting area grid. Grid also contains algorithm control placement items given explicit position grid. NOTE: default named grid lines officially supported imola. However, interested using named lines, use css string syntax rows columns manually add child elements css grid-column-start, grid-column-end, grid-row-start, grid-row-end, instead using named arguments areas. applies positioning child elements using cell indexes. specific argument add row column indexes child element, can always add manually via css styles argument HTML tag functions R.","code":""},{"path":"/articles/imola-grid.html","id":"overlapping-content","dir":"Articles","previous_headings":"Concepts and Terminology","what":"Overlapping content","title":"Grid functions","text":"one item can placed grid cell area, meaning can partially overlap . layering may controlled z-index property item.","code":""},{"path":"/articles/imola-grid.html","id":"section","dir":"Articles","previous_headings":"","what":"…","title":"Grid functions","text":"Tag attributes (named arguments) children (unnamed arguments). named argument NA value rendered boolean attribute. Named arguments can used provide additional values container grid. Visit https://www.w3schools.com/tags/ref_attributes.asp list valid HTML attributes. Children may include combination : tags objects [HTML()] strings [htmlDependency()]s Single-element atomic vectors ... main purpose add content panel, can also used tweak HTML generation, allowing similar behavior traditional HTML tag functions provided htmltools, letting customize HTML tag. default using functions behaves similar using div(), additional styles added meet layout expectations. defined named areas areas argument, can also pass named arguments using area names specify area child element added .","code":""},{"path":"/articles/imola-grid.html","id":"template","dir":"Articles","previous_headings":"","what":"template","title":"Grid functions","text":"name template use base grid, resulting value using gridTemplate() generate template object. passing string value template registered get error message. Valid template strings either built created using registerTemplate(). quick way see registered templates (flex functions) use names(listTemplates(\"flex\")): Templates register also become valid values template argument, also displayed listing available template names: listed template name can used value, regardless built custom:  Visit https://sparktuga.shinyapps.io/imolatemplates/ full list imola’s built templates. Note: See listTemplates() registerTemplate() documentation information functions, vignette(\"imola-templates\") full breakdown regarding templates imola.","code":"# names(listTemplates(\"grid\")) # Default built in grid templates  [1] \"grail-left-sidebar\"   \"grail-right-sidebar\"  \"header-left-sidebar\"  \"header-sidebar-right\" \"holy-grail\" [6] \"sidebar-left\"         \"sidebar-right\" registerTemplate(\"grid\", \"mycustomtemplate\",   areas = c(     \"area-1\",     \"area-2\",     \"area-3\"   ) )  # names(listTemplates(\"grid\")) [1] \"grail-left-sidebar\"   \"grail-right-sidebar\"  \"header-left-sidebar\"  \"header-sidebar-right\" \"holy-grail\" [6] \"sidebar-left\"         \"sidebar-right\"        \"mycustomtemplate\" gridPanel(template = \"grail-left-sidebar\")"},{"path":"/articles/imola-grid.html","id":"areas","dir":"Articles","previous_headings":"","what":"areas","title":"Grid functions","text":"Defines grid template referencing names grid areas specified css grid-area property (imola done named arguments part ...). Repeating name grid area causes content span cells. grid area valid, cells MUST create rectangular area (Single cell areas also valid). period signifies empty cell. syntax provides visualization structure grid. arguments, string variant also available prefer stay closer css syntax. either case, size grid determined given value areas. number columns length value (string syntax, number names separated spaces), number rows number values given. means example generate grid 4 columns 3 rows. also important note areas argument valid, length value given equal (number elements vector R syntax, number names space string syntax). example generate following css rules:  used together rows columns, areas provides names areas grid items, rows columns provide sizes. either rows columns provided, sizes automatically defined based dimensions areas argument.","code":"gridPanel(   areas = list(     c(\"header\", \"header\", \"header\", \"header\"),     c(\"main\", \"main\", \".\", \"sidebar\"),     c(\"footer\", \"footer\", \"footer\", \"footer\")   ),   header = div(class = \".item-a \"),   main = div(class = \".item-b \"),   sidebar = div(class = \".item-c \"),   footer = div(class = \".item-d \") ) gridPanel(   areas = c(     \"header header header header\",     \"main main . sidebar\",     \"footer footer footer footer\"   ),   header = div(class = \".item-a \"),   main = div(class = \".item-b \"),   sidebar = div(class = \".item-c \"),   footer = div(class = \".item-d \") ) .item-a {   grid-area: header; } .item-b {   grid-area: main; } .item-c {   grid-area: sidebar; } .item-d {   grid-area: footer; }  .panel {   grid-template-areas:     \"header header header header\"     \"main main . sidebar\"     \"footer footer footer footer\"; }"},{"path":"/articles/imola-grid.html","id":"rows","dir":"Articles","previous_headings":"","what":"rows","title":"Grid functions","text":"Defines rows grid space-separated list values. values represent track size, space represents grid line. imola, can use either css notation (string values separated space) vector notation (vector element value). notations valid, plan using specific css functions repeat(), single string css notation recommended.","code":"# both notations produce the same results # css notation rows = \"50px 50px 2fr 1fr\"  # R vector notation rows = c(\"50px\", \"50px\", \"2fr\", \"1fr\")"},{"path":"/articles/imola-grid.html","id":"columns","dir":"Articles","previous_headings":"","what":"columns","title":"Grid functions","text":"Defines columns grid space-separated list values. values represent track size, space represents grid line. imola, can use either css notation (string values separated space) vector notation (vector element value). notations valid, plan using specific css functions repeat(), single string css notation recommended.","code":"# both notations produce the same results # css notation columns = \"50px 50px 2fr 1fr\"  # R vector notation columns = c(\"50px\", \"50px\", \"2fr\", \"1fr\")"},{"path":"/articles/imola-grid.html","id":"gap","dir":"Articles","previous_headings":"","what":"gap","title":"Grid functions","text":"Controls space items. applies spacing items outer edges. behavior thought minimum gutter, gutter bigger somehow (something like justify-content: space-;) gap take effect space end smaller. gap argument controls row gap column gap time, making css equivalent gap, row-gap column-gap. single value given used row column gap, pair values separated space can also used controlling independently. Accepts valid value css values (\"0\", \"10px\", \"20%\", \"0.5rem\"), pair values separated space (\"10px 20px\", \"5% 10%\", \"10px 5%\").  default value 0 used. Supports named list breakpoints. See vignette(\"imola-breakpoints\") breakpoints.","code":""},{"path":"/articles/imola-grid.html","id":"align_items","dir":"Articles","previous_headings":"","what":"align_items","title":"Grid functions","text":"Aligns grid items along inline (row) axis (opposed justify_items aligns along block (column) axis). value applies grid items inside container. Possible values property include: - stretch – fills whole height cell (default) - start – aligns items flush start edge cell - end – aligns items flush end edge cell - center – aligns items center cell  Note: Together, align_items justify_items completely cover place-items css property, making direct coverage imola place-items redundant therefore provided grid functions.","code":""},{"path":"/articles/imola-grid.html","id":"justify_items","dir":"Articles","previous_headings":"","what":"justify_items","title":"Grid functions","text":"Aligns grid items along inline (row) axis (opposed align_items aligns along inline (row) axis). value applies grid items inside container. Possible values property include: - stretch – fills whole width cell (default) - start – aligns items flush start edge cell - end – aligns items flush end edge cell - center – aligns items center cell  Note: Together, align_items justify_items completely cover place-items css property, making direct coverage imola place-items redundant therefore provided grid functions.","code":""},{"path":"/articles/imola-grid.html","id":"auto_fill","dir":"Articles","previous_headings":"","what":"auto_fill","title":"Grid functions","text":"Flag tell grid container automatically. default using grid specific fractionary units (fr) can happen sometimes grid behave expected comes size. set true force panel stretched fit size parent element added. Defaults TRUE. content stretched unexpected ways, set FALSE allow content (rows columns defined sizes) control grid size instead.","code":""},{"path":"/articles/imola-grid.html","id":"breakpoint_system","dir":"Articles","previous_headings":"","what":"breakpoint_system","title":"Grid functions","text":"Optional Media breakpoints use. default current active breakpoint system. arguments support breakpoints, instead simply passing value, can also provide named list valid values. names used list can registered breakpoints available provided breakpoint_system argument (defaults getBreakpointSystem()), well reserved keyword default. See vignette(\"imola-breakpoints\") details breakpoints.","code":""},{"path":"/articles/imola-grid.html","id":"id","dir":"Articles","previous_headings":"","what":"id","title":"Grid functions","text":"panel ID. randomly generated one used default. Providing ID allow target generated HTML tag via CSS JavaScript needed. General rules regarding HTML Ids apply, including fact duplicated Ids allowed. full list details HTML ID attribute, check https://www.w3schools.com/html/html_id.asp","code":""},{"path":"/articles/imola-grid.html","id":"title","dir":"Articles","previous_headings":"","what":"title","title":"Grid functions","text":"browser window title (defaults host URL page). name appears browser tab.","code":""},{"path":"/articles/imola-grid.html","id":"fill_page","dir":"Articles","previous_headings":"","what":"fill_page","title":"Grid functions","text":"Flag tell page adjust page adjust fill browser window size. set true force grid least tall available browser window. makes container stretch content smaller, still allowing grow beyond height viewport necessary.","code":""},{"path":"/articles/imola-grid.html","id":"dependency","dir":"Articles","previous_headings":"","what":"dependency","title":"Grid functions","text":"set web dependencies. value can htmlDependency, example shiny bootstrap one (default) [tagList] different dependencies. Useful using different UI framework package required dependencies (requires suppress bootstrap dependencies)","code":""},{"path":"/articles/imola-templates.html","id":"creating-templates","dir":"Articles","previous_headings":"","what":"Creating templates","title":"Templates","text":"Templates can created via gridTemplate(). collections arguments can passed grid flex function. practive means share properties arguments, including: Support breakpoints Allowing css notation (string values separated space) vector notation (vector element value). important note templates require name type. name simply identifier template (useful later registering templates) type defines type functions can used (grid flex). Trying apply template wrong type panel page function possible. can use template object value template argument grid panels pages:","code":"mytemplate <- gridTemplate(\"myareas\", \"grid\",   areas = list(     default = c(       \"area1 area1 area1\",       \"area2 area3 area3\",       \"area2 area3 area3\"     ),     xs = c(       \"area1\",       \"area2\",       \"area3\"     )   ),   gap = \"20px\" ) #in ui.R gridPanel(   id = \"somePanel\"   template = mytemplate   area1 = div(\"area 1 content\"),   area2 = div(\"area 2 content\"),   area3 = div(\"area 3 content\") )"},{"path":"/articles/imola-templates.html","id":"registering-templates","dir":"Articles","previous_headings":"","what":"Registering templates","title":"Templates","text":"Registered templates templates either bundled imola, added global template list using registerTemplate() template object. can view registered templates using listTemplates(). registering template making available outside scope created, meaning available use even object created somewhere else. approach allows us create register templates needed, making easier bundle manage lot templates needed. Calling registerTemplate() gridTemplate() object adds template available use page panel page directly name: needed can also remove template global list using unregisterTemplate(\"name\", \"type\"): Registered templates can also turned back template object using getTemplate(). object can used created gridTemplate().","code":"#in global.R mytemplate <- gridTemplate(\"myareas\", \"grid\",   areas = list(     default = c(       \"area1 area1 area1\",       \"area2 area3 area3\",       \"area2 area3 area3\"     ),     xs = c(       \"area1\",       \"area2\",       \"area3\"     )   ),   gap = \"20px\" )  # register it globally registerTemplate(mytemplate) #in ui.R gridPanel(   id = \"somePanel\"   template = \"myareas\"   area1 = div(\"area 1 content\"),   area2 = div(\"area 2 content\"),   area3 = div(\"area 3 content\") ) # unregister a template unregisterTemplate(\"myareas\", \"grid\")"},{"path":"/articles/imola-templates.html","id":"bundled-templates","dir":"Articles","previous_headings":"","what":"Bundled templates","title":"Templates","text":"default imola also includes ready use templates. Similar manually registered templates also listed listTemplates(). can used just like registered templates, diference require manually registering : demo templates bundled imola, click ","code":"#in ui.R gridPanel(   template = \"header-sidebar-right\"   header = div(\"header\"),   content = div(\"content\"),   sidebar = div(\"sidebar\") )"},{"path":"/articles/imola-templates.html","id":"importing-and-exporting","dir":"Articles","previous_headings":"","what":"Importing and Exporting","title":"Templates","text":"also possible import export template objects future usage diferent projects. case can make use exportTemplate() importTemplate(). exportTemplate() allows export template object specific file. file contain necessary information rebuild template, even diferent project, can turned back template object using importTemplate().","code":""},{"path":"/articles/imola-why-flex-and-grid.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Web layout history: How we got to grid and flex","text":"’re around web development since 90s, might remember different web design used look. Solutions often intuitive, complicated, hacky workarounds often considered best practices. web evolved, layout (styling) options available, maturing changing make used convoluted solutions simpler straightforward approaches. life CSS know now came ? page layouts setup? grid flexbox considered much better previous solutions, currently used side side instead one ? Join trip though memory lane look web layouts evolved since beginning web current solutions now use.","code":""},{"path":"/articles/imola-why-flex-and-grid.html","id":"the-early-days-of-html","dir":"Articles","previous_headings":"","what":"The early days of HTML","title":"Web layout history: How we got to grid and flex","text":"original proposals HTML started 1989, lasted February 1997, practical realization HTML presentation screens. included published recommendations, browsers & development tools, actual web sites. point web developers mostly focused document sharing, elements focused much document requirements headers, fonts paragraphs. 1993, style sheet control layout proposed, still take time become mainstream. Around time (well reign tables layout purposes) HTML document structure dictated page layout, though need sequential content, barely even considered. Early HTML specs state “elements within BODY element order presented reader”.","code":""},{"path":"/articles/imola-why-flex-and-grid.html","id":"html-tables","dir":"Articles","previous_headings":"","what":"HTML Tables","title":"Web layout history: How we got to grid and flex","text":"1991 ViolaWWW grew sophisticated early Web browsers. claimed first browser support style sheets, tables, nest-able HTML elements. Followed 1993 proposal made “columns” presentation language web. proposal directly turn CSS. “styles defined specify recommended behavior HTML objects terms : …. page layout … column ….”. initial works tables HTML, finally 1997, HTML 3.2 finally released W3C Recommendation. stated tables “can used markup tabular material layout purposes”… oh boy people took literally. Tables became base web pages considered go structuring content. wild time invisible gifs used spacing, convoluted markup many terrifying things. Home Contact content footer","code":"<!-- html --> <table>   <tr>     <td colspan=\"2\">         <h1>header<\/h1>     <\/td>   <\/tr>   <tr>     <td>       <ul>         <li><a>Home<\/a><\/li>         <li><a>About<\/a><\/li>         <li><a>Contact<\/a><\/li>       <\/ul>     <\/td>     <td>       <h2>Title<\/h2>       <p>content<\/p>     <\/td>   <\/tr>   <tr>     <td colspan=\"2\">       <p>footer<\/p>     <\/td>   <\/tr> <\/table>"},{"path":"/articles/imola-why-flex-and-grid.html","id":"floats-and-the-first-layout-frameworks","dir":"Articles","previous_headings":"","what":"Floats and the first layout frameworks","title":"Web layout history: How we got to grid and flex","text":"Eventually new CSS property made way top, float. idea float simply, element need text wrap around , float element get exactly ! Simple right? Well… couple fixed size floated element, large dose space clearing techniques, CSS position property one achieve LOT. conclusion clever developers reached early 2000’s, allowing multi-column layouts created becoming go times. Eventually frameworks started gaining popularity hide hacks behind css classes HTML structures, making life even easier. Bootstrap 3 great example framework , even now, can found millions websites (even though newest iteration, bootstrap 4, longer uses approach instead relies flexbox layout system).","code":"<!-- html --> <header>Header<\/header> <main>Main article<\/main> <aside>List of links and news<\/aside> <footer>Copyright information<\/footer> /* css */ main {   float: left;   width: 60%;   margin: 0 5%; } aside {   width: 25%;   margin-left: 70%; } footer {   clear: left; }"},{"path":"/articles/imola-why-flex-and-grid.html","id":"css-flex-flexbox","dir":"Articles","previous_headings":"","what":"CSS Flex (flexbox)","title":"Web layout history: How we got to grid and flex","text":"introduction display: flex; property around 2012 real step forward, solving many existing layout problems making web developers designers generally quite happy. true first CSS property 100% developed focused layouts, making way modern web development quite fast. specially powerful page layouts can defined primarily terms either columns rows. instance, want align elements single row, display: flex; provide us modern easy way . , flex built control properties alignment visual order elements without change HTML markup directly. HTML becomes semantic based, specially release HTML 5, becomes even important since allows us fully decouple presentation layer content.","code":"<!-- html --> <header>Header<\/header> <div id=\"main\">   <article>Article<\/article>   <nav>Nav<\/nav>   <aside>Aside<\/aside> <\/div> <footer>Footer<\/footer> /* css */ #main {   display: flex; } #main > nav, #main > aside {   flex: 0 0 20%; } #main > article {   flex: 1;   order: 1; } #main > nav {   order: 3; } #main > aside {   order: 2; }"},{"path":"/articles/imola-why-flex-and-grid.html","id":"css-grid","dir":"Articles","previous_headings":"","what":"CSS Grid","title":"Web layout history: How we got to grid and flex","text":"moment time display: grid; CSS property intended building flexible responsive grid layouts. sort layout requires layout area can manipulated two dimensions – horizontally vertically – exactly CSS Grid . display: flex; gives full control either columns rows, Grid goes one step forward can handle rows columns, meaning always align items horizontal vertical tracks set . Grid mostly defined container, children flexbox. Article","code":"<!-- html --> <div class=\"page-wrap\">   <header class=\"page-header\">     Header   <\/header>   <nav class=\"page-nav\">     Nav   <\/nav>   <main class=\"page-main\">     <article>       <p>Article<\/p>     <\/article>   <\/main>   <aside class=\"page-sidebar\">     Aside   <\/aside>   <footer class=\"page-footer\">     Footer   <\/footer> <\/div> /* css */ .page-wrap {   display: grid;   grid-template-columns: minmax(10px, 1fr) minmax(10px, 3fr);   grid-template-rows: min-content min-content 1fr min-content; }  .page-header {   grid-column: 1/-1; }  .page-sidebar {   grid-column: 1/2;   grid-row: 2/4; }  .page-nav {   grid-column: 2/3; }  .page-main {   grid-column: 2/3; }  .page-footer {   grid-column: 1/-1; }"},{"path":"/articles/imola-why-flex-and-grid.html","id":"new-is-always-better-right","dir":"Articles","previous_headings":"","what":"New is always better… Right?","title":"Web layout history: How we got to grid and flex","text":"Grid wins! Well, . Flexbox Grid serve different purposes incredibly useful. Sometimes flex best solution, sometimes grid makes simpler, sometimes works. Flex Grid also work well together, can easily put Flex element within Grid element vice versa. important thing decide case layout system best suited case. comes approach use, general rules make life easier:","code":""},{"path":"/articles/imola-why-flex-and-grid.html","id":"use-flex-when","dir":"Articles","previous_headings":"New is always better… Right?","what":"Use Flex when:","title":"Web layout history: How we got to grid and flex","text":"Content priority Need horizontal vertical alignment Layout one-dimensional Need better older browser support","code":""},{"path":"/articles/imola-why-flex-and-grid.html","id":"use-grid-when","dir":"Articles","previous_headings":"New is always better… Right?","what":"Use Grid when:","title":"Web layout history: How we got to grid and flex","text":"Things need set width regardless content Need two-dimensional layout (items one row column need align item previous row column) Elements need overlap common rule thumb use Grid full page layouts Flex everything else, consider whether component plan build one-dimensional (Flex) two-dimensional (Grid). depth dive Grid Flex, make sure check vignettes : vignette(\"imola-flexbox\") details Flex. vignette(\"imola-grid\") details Grid.","code":""},{"path":"/articles/imola-why-flex-and-grid.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Web layout history: How we got to grid and flex","text":"’re interested details regarding story HTML CSS, make sure check: http://www.barrypearson.co.uk/articles/layout_tables/history.htm https://joom.team/en/-brief-history--html-css-layouting https://code-literacy.medium.com/css-layout-evolution-detailed--example-579b31475392 https://learningwebdesign.com/articles/LWD5_FloatLayout.pdf","code":""},{"path":"/articles/imola.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"Getting started with imola","text":"bread butter imola gridPanel() flexPanel() functions. allow replace HTML tag serves container (div, section, main, nav, …) tag using one CSS layout systems (grid flex). depth knowledge CSS Flexbox CSS Grid required get started, recomended least somewhat familiar . recommend article get speed. looking information specific system imola, make sure check following vignettes depth view: vignette(\"imola-flexbox\") details flexPanel() flexPage(). vignette(\"imola-grid\") details gridPanel() gridPage(). vignette(\"imola-templates\") information using imola’s templating engine. vignette(\"imola-breakpoints\") information using imola’s breakpoint systems.","code":""},{"path":"/articles/imola.html","id":"using-grid-vs-flex","dir":"Articles","previous_headings":"","what":"Using grid vs flex","title":"Getting started with imola","text":"Picking grid flex might seem tricky. general flex Grid serve different purposes incredibly useful. Picking tipically depends use case:","code":""},{"path":"/articles/imola.html","id":"use-flex-when","dir":"Articles","previous_headings":"Using grid vs flex","what":"Use Flex when:","title":"Getting started with imola","text":"Content sets size Need horizontal vertical alignment Layout one-dimensional Need better older browser support","code":""},{"path":"/articles/imola.html","id":"use-grid-when","dir":"Articles","previous_headings":"Using grid vs flex","what":"Use Grid when:","title":"Getting started with imola","text":"Things need set width regardless content Layout two-dimensional Elements need overlap common rule thumb use Grid full page layouts Flex everything else, consider whether component plan build one-dimensional (Flex) two-dimensional (Grid). means looking fine control columns rows, aim using grid, care one dimensions, flex likely work just fine.","code":""},{"path":"/articles/imola.html","id":"grid","dir":"Articles","previous_headings":"","what":"Grid","title":"Getting started with imola","text":"grid function family focuses providing support CSS Grid standard. imola can find 2 functions allow create new grid component. gridPanel() gridPage(). gridPage() full page version gridPanel() allowing create full page UI use shiny. ’re interested information CSS side, recommend article get started. grid imola, check vignette(\"imola-grid\").","code":"gridPanel(   ...,   template = NULL,   areas = NULL,   rows = NULL,   columns = NULL,   gap = NULL,   align_items = \"stretch\",   justify_items = \"stretch\",   auto_fill = TRUE,   breakpoint_system = getBreakpointSystem(),   id = generateID() )"},{"path":"/articles/imola.html","id":"flex","dir":"Articles","previous_headings":"","what":"Flex","title":"Getting started with imola","text":"flex function family focuses providing support CSS flex standard. imola can find 2 functions allow create new flex component. flexPanel() flexPage(). flexPage() full page version flexPanel() allowing create full page UI use shiny. ’re interested information CSS side, recommend article get started. flex imola, check vignette(\"imola-flex\").","code":"flexPanel(   ...,   template = NULL,   direction = \"row\",   wrap = \"nowrap\",   justify_content = \"flex-start\",   align_items = \"stretch\",   align_content = \"flex-start\",   gap = 0,   flex = c(1),   grow = NULL,   shrink = NULL,   basis = NULL,   breakpoint_system = getBreakpointSystem(),   id = generateID() )"},{"path":"/articles/imola.html","id":"breakpoint-systems","dir":"Articles","previous_headings":"","what":"Breakpoint systems","title":"Getting started with imola","text":"CSS breakpoints way assigning website specific css style rules according device width, allowing show best possible layout user matter screen size.  CSS breakpoints also often called media query breakpoints, used @media css rule. Different CSS frameworks usually breakpoints baked , usually hidden behind css class name identifies specific screen size. familiar base shiny css based frameworks, might even used systems without realizing; example, using fluidRow() function trigger layout changes columns() specific screen sizes, based bootstrap 3 breakpoints (base CSS framework shiny). great done automatically, also comes many constrains allow fine control layout changes. often complex layouts, may often find writing additional CSS add new behavior specific elements screen sizes. Imola takes slightly different approach breakpoints: box uses breakpoint system base shiny (bootstrap 3). can change default breakpoint system application level, also component level. grid flex function named attribute able pass either value attribute named list different values different breakpoints. Names can used function attributes depend breakpoint names available, can use getBreakpointSystem() see active breakpoint system: Lets say following grid areas gridPanel(): case, want use default breakpoint system target small devices, target via xs, build areas argument named list instead. can use default name default value areas argument. Think default value used screen sizes value can applied. default reserved keyword imola, keep mind use editing creating custom breakpoint system. breakpoints systems, including changing active system creating , check vignette(\"imola-breakpoints\").","code":"Imola Breakpoint System Name:  bootstrap3 description:  No description   Available Breakpoints (name)   Minimum screen size (px)   Maximum screen size (px) -----------------------------  -------------------------  ------------------------- xs                             NULL                       575 sm                             NULL                       767 md                             NULL                       991 lg                             NULL                       1199 xl                             1200                       NULL ----------------------------- # as a gridPanel() argument areas = c(   \"area1 area1 area1\",   \"area2 area3 area3\",   \"area2 area3 area3\" ) # as a gridPanel() argument areas = list(   default = c(     \"area1 area1 area1\",     \"area2 area3 area3\",     \"area2 area3 area3\"   ),   xs = c(     \"area1\",     \"area2\",     \"area3\"   ) )"},{"path":"/articles/imola.html","id":"templates","dir":"Articles","previous_headings":"","what":"Templates","title":"Getting started with imola","text":"Often development common multiple elements share layout. order easily reuse layout create, imola also includes simple template engine. Templates can used via template argument panel page functions providing either name registered template, template object created gridTemplate(). Registered templates templates either bundled imola, added global template list using registerTemplate() template object. can view registered templates using listTemplates(). Similar grid flex functions, templates also support breakpoint systems. Lets say like save previous areas template, use diferent components. use gridTemplate() generate template object: can use template object argument grid panels: can also register template global usage. case need register defining : case can simply use name registered template instead object: can view registered templates listTemplates(). demo templates bundled imola, can view demo can register many templates want, keep mind type + name combo must unique. can also remove templates using unregisterTemplate() needed. templates imola, check vignette(\"imola-templates\").","code":"#in global.R # create a template object mytemplate <- gridTemplate(\"myareas\", \"grid\", areas = list(     default = c(         \"area1 area1 area1\",         \"area2 area3 area3\",         \"area2 area3 area3\"     ),     xs = c(         \"area1\",         \"area2\",         \"area3\"     ) )) #in ui.R gridPanel(   id = \"somePanel\"   template = mytemplate   area1 = div(\"area 1 content\"),   area2 = div(\"area 2 content\"),   area3 = div(\"area 3 content\") ) #in global.R # register it globally registerTemplate(mytemplate) #in ui.R gridPanel(   id = \"somePanel\"   template = \"myareas\"   area1 = div(\"area 1 content\"),   area2 = div(\"area 2 content\"),   area3 = div(\"area 3 content\") )"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Pedro Silva. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Silva P (2022). imola: CSS Layouts (Grid Flexbox) Implementation R/Shiny. R package version 0.5.0, https://github.com/pedrocoutinhosilva/imola.","code":"@Manual{,   title = {imola: CSS Layouts (Grid and Flexbox) Implementation for R/Shiny},   author = {Pedro Silva},   year = {2022},   note = {R package version 0.5.0},   url = {https://github.com/pedrocoutinhosilva/imola}, }"},{"path":"/index.html","id":"imola-","dir":"","previous_headings":"","what":"Imola - CSS layouts for R/Shiny","title":"Imola - CSS layouts for R/Shiny","text":"CSS Grid flexbox layouts R/Shiny dashboards, directly R. Imola (named first city ever given technical blueprint Leonardo da Vinci) aims giving layout creation options directly R/shiny, without hassle create custom CSS every time.","code":""},{"path":"/index.html","id":"css-layouts-in-shiny-made-simple","dir":"","previous_headings":"","what":"CSS Layouts in shiny, made simple","title":"Imola - CSS layouts for R/Shiny","text":"Leverage typical CSS layout techniques (grid Flexbox) directly UI functions, including support media breakpoints fit different screen sizes devices.","code":""},{"path":"/index.html","id":"use-built-in-templates-or-create-your-own","dir":"","previous_headings":"","what":"Use built in templates, or create your own","title":"Imola - CSS layouts for R/Shiny","text":"Save favorite layouts later use via templating system reuse many times need. layout creation isn’t thing, imola comes built collection templates traditionally used web layouts, making even easier spice dashboards!  Browse available templates : https://sparktuga.shinyapps.io/imolatemplates/","code":""},{"path":"/index.html","id":"demos-to-get-you-started","dir":"","previous_headings":"","what":"Demos to get you started","title":"Imola - CSS layouts for R/Shiny","text":"Example applications showcasing power imola:  Built template layouts: https://sparktuga.shinyapps.io/imolatemplates/ UA Migration Tracker (Full dashboard): https://github.com/pedrocoutinhosilva/UA-Refugee-Migration-Tracker/","code":""},{"path":[]},{"path":"/index.html","id":"1---install-the-package","dir":"","previous_headings":"","what":"Imola - CSS layouts for R/Shiny","title":"Imola - CSS layouts for R/Shiny","text":"","code":"# Install released version from CRAN install.packages('imola')  # Or the most recent development version from github: devtools::install_github('pedrocoutinhosilva/imola')"},{"path":"/index.html","id":"2---include-it-in-your-project","dir":"","previous_headings":"","what":"Imola - CSS layouts for R/Shiny","title":"Imola - CSS layouts for R/Shiny","text":"now ready go! Looking help start? Make sure check built examples vignettes help usage examples.","code":"# global.R library(imola)"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Imola - CSS layouts for R/Shiny","text":"Check vignette(\"imola\") get started, follow vignettes even information regarding CSS flexbox grid imola equivalents. Looking specific topic? Use following vignettes quick start: vignette(\"imola-flexbox\") details flexPanel() flexPage(). vignette(\"imola-grid\") details gridPanel() gridPage(). vignette(\"imola-templates\") information using imola’s templating engine. vignette(\"imola-breakpoints\") information using imola’s breakpoint systems.","code":""},{"path":"/reference/activeBreakpoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Current active media breakpoints. By default the default_system\r\nsetting values are used, but the list can be customized by using the\r\nregisterBreakpoint() and unregisterBreakpoint() functions. — activeBreakpoints","title":"Current active media breakpoints. By default the default_system\r\nsetting values are used, but the list can be customized by using the\r\nregisterBreakpoint() and unregisterBreakpoint() functions. — activeBreakpoints","text":"Current active media breakpoints. default default_system setting values used, list can customized using registerBreakpoint() unregisterBreakpoint() functions.","code":""},{"path":"/reference/activeBreakpoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Current active media breakpoints. By default the default_system\r\nsetting values are used, but the list can be customized by using the\r\nregisterBreakpoint() and unregisterBreakpoint() functions. — activeBreakpoints","text":"","code":"activeBreakpoints()"},{"path":"/reference/activeBreakpoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Current active media breakpoints. By default the default_system\r\nsetting values are used, but the list can be customized by using the\r\nregisterBreakpoint() and unregisterBreakpoint() functions. — activeBreakpoints","text":"named list media breakpoints options.","code":""},{"path":"/reference/addBreakpoint.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a breakpoint to a breakpoint system — addBreakpoint","title":"Add a breakpoint to a breakpoint system — addBreakpoint","text":"Adds breakpoint breakpoint system object.","code":""},{"path":"/reference/addBreakpoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a breakpoint to a breakpoint system — addBreakpoint","text":"","code":"addBreakpoint(system, breakpoint)"},{"path":"/reference/addBreakpoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a breakpoint to a breakpoint system — addBreakpoint","text":"system breakpoint system object created breakpointSystem. breakpoint breakpoint created breakpoint.","code":""},{"path":"/reference/addBreakpoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a breakpoint to a breakpoint system — addBreakpoint","text":"breakpoint system object.","code":""},{"path":"/reference/addClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Add object class — addClass","title":"Add object class — addClass","text":"Adds class object","code":""},{"path":"/reference/addClass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add object class — addClass","text":"","code":"addClass(object, class)"},{"path":"/reference/addClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add object class — addClass","text":"object R object. class string representing object class.","code":""},{"path":"/reference/addClass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add object class — addClass","text":"given R object additional class.","code":""},{"path":"/reference/applyTemplate.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a template to a attribute list — applyTemplate","title":"Apply a template to a attribute list — applyTemplate","text":"Merges set attributes given template. avoid redundant attributes added final list, list default values (based specific panel creation callback formals) used validate need argument value final list.","code":""},{"path":"/reference/applyTemplate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a template to a attribute list — applyTemplate","text":"","code":"applyTemplate(attributes, template, defaults, type)"},{"path":"/reference/applyTemplate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a template to a attribute list — applyTemplate","text":"attributes manually given attribute values take priority merge. template name template merge, template object. defaults Default attribute values ignore attributes. type type css grid template.","code":""},{"path":"/reference/applyTemplate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply a template to a attribute list — applyTemplate","text":"named list css attributes can used generate html element style rules given type.","code":""},{"path":"/reference/breakpoint.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a breakpoint — breakpoint","title":"Create a breakpoint — breakpoint","text":"Creates valid breakpoint object use breakpoint system. min max arguments optional, least one must exist breakpoint considered valid.","code":""},{"path":"/reference/breakpoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a breakpoint — breakpoint","text":"","code":"breakpoint(name, min = NULL, max = NULL)"},{"path":"/reference/breakpoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a breakpoint — breakpoint","text":"name string name identifies breakpoint. min Optional numeric minimum value (pixels) screen width breakpoint active. max Optional numeric maximum value (pixels) screen width breakpoint active.","code":""},{"path":"/reference/breakpoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a breakpoint — breakpoint","text":"breakpoint object.","code":""},{"path":"/reference/breakpointSystem.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a breakpoint system — breakpointSystem","title":"Create a breakpoint system — breakpointSystem","text":"Creates breakpoint system object containing information system, including name set available breakpoints.","code":""},{"path":"/reference/breakpointSystem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a breakpoint system — breakpointSystem","text":"","code":"breakpointSystem(name, ..., description = NULL)"},{"path":"/reference/breakpointSystem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a breakpoint system — breakpointSystem","text":"name string name identifies breakpoint system. ... One breakpoint objects created breakpoint. description Optional description information. breakpoint system. Can used pass information regarding system (example origin connected frameworks).","code":""},{"path":"/reference/breakpointSystem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a breakpoint system — breakpointSystem","text":"breakpoint system object.","code":""},{"path":"/reference/exportBreakpointSystem.html","id":null,"dir":"Reference","previous_headings":"","what":"Export a breakpoint system — exportBreakpointSystem","title":"Export a breakpoint system — exportBreakpointSystem","text":"Exports breakpoint system file storage later usage. Exported systems can retrieved file form using importBreakpointSystem.","code":""},{"path":"/reference/exportBreakpointSystem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export a breakpoint system — exportBreakpointSystem","text":"","code":"exportBreakpointSystem(system, path)"},{"path":"/reference/exportBreakpointSystem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export a breakpoint system — exportBreakpointSystem","text":"system string name registered breakpoint system, breakpoint system object generated breakpointSystem. path file path export system , including file name extension. file name must end .yaml extension.","code":""},{"path":"/reference/exportBreakpointSystem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export a breakpoint system — exportBreakpointSystem","text":"return value, called side effects.","code":""},{"path":"/reference/exportTemplate.html","id":null,"dir":"Reference","previous_headings":"","what":"Export a template — exportTemplate","title":"Export a template — exportTemplate","text":"Exports template file storage later usage. Exported template can retrieved file form using importTemplate.","code":""},{"path":"/reference/exportTemplate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export a template — exportTemplate","text":"","code":"exportTemplate(template, path)"},{"path":"/reference/exportTemplate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export a template — exportTemplate","text":"template template object generated gridTemplate. path file path export system , including file name extension. file name must end .yaml extension.","code":""},{"path":"/reference/exportTemplate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export a template — exportTemplate","text":"return value, called side effects.","code":""},{"path":"/reference/flexPage.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a css flexbox based page — flexPage","title":"Create a css flexbox based page — flexPage","text":"Create Shiny UI page using flexPanel wrap page content. Shiny UI pages, scaffolds entire page loads required registered dependencies.","code":""},{"path":"/reference/flexPage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a css flexbox based page — flexPage","text":"","code":"flexPage(..., title = NULL, fill_page = TRUE, dependency = bootstrapLib())"},{"path":"/reference/flexPage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a css flexbox based page — flexPage","text":"... Arguments passed flexPanel. title browser window title (defaults host URL page). fill_page Boolean value page automatically stretch match browser window height. dependency set web dependencies. value can htmlDependency, example shiny bootstrap dependency (default value) tagList different dependencies.","code":""},{"path":"/reference/flexPage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a css flexbox based page — flexPage","text":"UI definition can passed shinyUI function.","code":""},{"path":"/reference/flexPage.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create a css flexbox based page — flexPage","text":"See https://css-tricks.com/snippets/css/-guide--flexbox/ additional details using css flexbox.","code":""},{"path":[]},{"path":"/reference/flexPanel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a css flexbox based HTML tag — flexPanel","title":"Create a css flexbox based HTML tag — flexPanel","text":"Creates HTML tag automatically generates css style rules based css flexbox, depending given arguments. Functionality acts way generate css flexbox based HTML containers directly R without need write additional css rules directly.","code":""},{"path":"/reference/flexPanel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a css flexbox based HTML tag — flexPanel","text":"","code":"flexPanel(   ...,   template = NULL,   direction = \"row\",   wrap = \"nowrap\",   justify_content = \"flex-start\",   align_items = \"stretch\",   align_content = \"flex-start\",   gap = 0,   flex = c(1),   grow = NULL,   shrink = NULL,   basis = NULL,   breakpoint_system = getBreakpointSystem(),   id = generateID() )"},{"path":"/reference/flexPanel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a css flexbox based HTML tag — flexPanel","text":"... Tag attributes (named arguments) child elements (unnamed arguments). Named arguments treated additional html attribute values parent tag. Child elements may include combination tags objects, HTML strings, htmlDependencys. template name registered template use base grid, template object gridTemplate. direction Direction flow elements panel. Accepts valid css flex-direction value (row | row-reverse | column | column-reverse). Default value row value used. Supports breakpoints. wrap elements allowed wrap multiple lines. Accepts valid css flex-wrap value (nowrap | wrap | wrap-reverse). Supports breakpoints. justify_content alignment along main axis. Accepts valid css justify-content value (flex-start | flex-end | center | space-| space-around | space-evenly | start | end | left | right). Supports breakpoints. align_items Defines default behavior flex items laid along cross axis current line. Accepts valid css align-items value (stretch | flex-start | flex-end | center | baseline | first baseline | last baseline | start | end | self-start | self-end). Supports breakpoints. align_content Aligns flex container’s lines within extra space cross-axis. Accepts valid css align-content value (flex-start | flex-end | center | space-| space-around | space-evenly | stretch | start | end | baseline | first baseline | last baseline). Supports breakpoints. gap space elements panel. Controls space rows columns. Accepts css valid value, 2 values separated space (using different values row column spacing). Supports breakpoints. flex vector valid css 'flex' values. Defines child elements panel can grow, shrink initial size. Arguments target child elements require vector values instead single value, entry vector affecting nth child element. vector less entries total number child elements, values repeated pattern affects elements panel. vector entries number child elements, exceeding entries ignored. NA can also used entry skip adding rule specific child element. Accepts valid css flex value vector values. default c(1) used, meaning elements can grow shrink required, rate. Supports breakpoints. grow vector valid css 'flex-grow' values. Defines rate elements can grow. Entries overwrite 'flex' values, can used make targeted rules. Arguments target child elements require vector values instead single value, entry vector affecting nth child element. vector less entries total number child elements, values repeated pattern affects elements panel. vector entries number child elements, exceeding entries ignored. NA can also used entry skip adding rule specific child element. default NULL used, meaning values flex argument used instead. Supports breakpoints. shrink vector valid css 'flex-shrink' values. Defines rate elements can shrink. Entries overwrite nth 'flex' value, can used make targeted rules. Arguments target child elements require vector values instead single value, entry vector affecting nth child element. vector less entries total number child elements, values repeated pattern affects elements panel. vector entries number child elements, exceeding entries ignored. NA can also used entry skip adding rule specific child element. default NULL used, meaning values flex argument used instead. Supports breakpoints. basis vector valid css 'flex-basis' values. Defines base size elements. Entries overwrite nth 'flex' value, can used make targeted rules. Arguments target child elements require vector values instead single value, entry vector affecting nth child element. vector less entries total number child elements, values repeated pattern affects elements panel. vector entries number child elements, exceeding entries ignored. NA can also used entry skip adding rule specific child element. default NULL used, meaning values flex argument used instead. Supports breakpoints. breakpoint_system Breakpoint system use. id parent element id.","code":""},{"path":"/reference/flexPanel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a css flexbox based HTML tag — flexPanel","text":"HTML tagList.","code":""},{"path":"/reference/flexPanel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a css flexbox based HTML tag — flexPanel","text":"Behaves similar normal HTML tag, provides helping arguments simplify way flexbox css can created shiny.","code":""},{"path":"/reference/flexPanel.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create a css flexbox based HTML tag — flexPanel","text":"creating responsive layouts based css media rules, arguments allow named list can passed instead single value. names list can breakpoints available breakpoint_system argument. recommended define breakpoint system application globally UI definitions, breakpoint_system panel functions allows flexibility reusing components projects. See https://css-tricks.com/snippets/css/-guide--flexbox/ additional details using css flexbox. full list valid HTML attributes check visit https://www.w3schools.com/tags/ref_attributes.asp.","code":""},{"path":[]},{"path":"/reference/generateCSSPropertyStyles.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates styles for a css property. — generateCSSPropertyStyles","title":"Creates styles for a css property. — generateCSSPropertyStyles","text":"Creates required css statements specific css property. includes rules breakpoints.","code":""},{"path":"/reference/generateCSSPropertyStyles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates styles for a css property. — generateCSSPropertyStyles","text":"","code":"generateCSSPropertyStyles(value, property, id, system)"},{"path":"/reference/generateCSSPropertyStyles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates styles for a css property. — generateCSSPropertyStyles","text":"value Normalized attribute value list. property css attribute generate rules . id id parent element. system breakpoint system object use.","code":""},{"path":"/reference/generateCSSPropertyStyles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates styles for a css property. — generateCSSPropertyStyles","text":"vector valid css strings.","code":""},{"path":"/reference/generateFlexChildrenCSS.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates styles for the children of a css flex element. — generateFlexChildrenCSS","title":"Creates styles for the children of a css flex element. — generateFlexChildrenCSS","text":"Creates css required position child element flex element.","code":""},{"path":"/reference/generateFlexChildrenCSS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates styles for the children of a css flex element. — generateFlexChildrenCSS","text":"","code":"generateFlexChildrenCSS(attributes, id, number_children, system)"},{"path":"/reference/generateFlexChildrenCSS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates styles for the children of a css flex element. — generateFlexChildrenCSS","text":"attributes Normalized attribute list. id id parent wrapper element. number_children Number child elements wrapper. Required generate rules flex elements. system breakpoint system object use.","code":""},{"path":"/reference/generateFlexChildrenCSS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates styles for the children of a css flex element. — generateFlexChildrenCSS","text":"vector valid css strings.","code":""},{"path":"/reference/generateFlexCSS.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates styles for a css flex element. — generateFlexCSS","title":"Creates styles for a css flex element. — generateFlexCSS","text":"Creates requires css statements specific set flex attributes. includes css required position child element flex element.","code":""},{"path":"/reference/generateFlexCSS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates styles for a css flex element. — generateFlexCSS","text":"","code":"generateFlexCSS(attributes, id, number_children, system)"},{"path":"/reference/generateFlexCSS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates styles for a css flex element. — generateFlexCSS","text":"attributes Normalized attribute list. id id parent element. number_children Number child elements. system breakpoint system object use.","code":""},{"path":"/reference/generateFlexCSS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates styles for a css flex element. — generateFlexCSS","text":"vector valid css strings.","code":""},{"path":"/reference/generateGridAreaCSS.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates styles for css grid areas. — generateGridAreaCSS","title":"Creates styles for css grid areas. — generateGridAreaCSS","text":"Creates requires css statements specific set grid areas. includes css required position child element named grid area.","code":""},{"path":"/reference/generateGridAreaCSS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates styles for css grid areas. — generateGridAreaCSS","text":"","code":"generateGridAreaCSS(areas, id)"},{"path":"/reference/generateGridAreaCSS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates styles for css grid areas. — generateGridAreaCSS","text":"areas Vector strings area names. id id parent wrapper element.","code":""},{"path":"/reference/generateGridAreaCSS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates styles for css grid areas. — generateGridAreaCSS","text":"vector valid css strings.","code":""},{"path":"/reference/generateGridCSS.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates styles for css grid attributes. — generateGridCSS","title":"Creates styles for css grid attributes. — generateGridCSS","text":"Creates styles css grid attributes.","code":""},{"path":"/reference/generateGridCSS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates styles for css grid attributes. — generateGridCSS","text":"","code":"generateGridCSS(attributes, id, areas, system)"},{"path":"/reference/generateGridCSS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates styles for css grid attributes. — generateGridCSS","text":"attributes Normalized attribute list. id id parent wrapper element. areas Area names grid. system breakpoint system object use.","code":""},{"path":"/reference/generateGridCSS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates styles for css grid attributes. — generateGridCSS","text":"vector valid css strings.","code":""},{"path":"/reference/generateID.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a ID — generateID","title":"Generate a ID — generateID","text":"Generates HTML valid ID. HTML valid IDs follow specific standards: ID must start letter (-z -Z). subsequent characters can letters, numbers (0-9), hyphens (-), underscores (_), colons (:), periods (.). ID must unique within document.","code":""},{"path":"/reference/generateID.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a ID — generateID","text":"","code":"generateID()"},{"path":"/reference/generateID.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a ID — generateID","text":"valid CSS id.","code":""},{"path":"/reference/getBreakpointSystem.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a registered breakpoint system — getBreakpointSystem","title":"Get a registered breakpoint system — getBreakpointSystem","text":"Returns breakpoint system object registered breakpoint system name , currently active breakpoint system system name provided.","code":""},{"path":"/reference/getBreakpointSystem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a registered breakpoint system — getBreakpointSystem","text":"","code":"getBreakpointSystem(name = NULL)"},{"path":"/reference/getBreakpointSystem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a registered breakpoint system — getBreakpointSystem","text":"name string name registered breakpoint system, NULL looking currently active breakpoint system.","code":""},{"path":"/reference/getBreakpointSystem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a registered breakpoint system — getBreakpointSystem","text":"breakpoint system object.","code":""},{"path":"/reference/getTemplate.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a registered template — getTemplate","title":"Get a registered template — getTemplate","text":"Returns object form registered template name type.","code":""},{"path":"/reference/getTemplate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a registered template — getTemplate","text":"","code":"getTemplate(name, type)"},{"path":"/reference/getTemplate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a registered template — getTemplate","text":"name name registered template. type type css grid template can used.","code":""},{"path":"/reference/getTemplate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a registered template — getTemplate","text":"template object.","code":""},{"path":"/reference/gridPage.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a css grid based page — gridPage","title":"Create a css grid based page — gridPage","text":"Create Shiny UI page using gridPanel wrap page content. Shiny UI pages, scaffolds entire page loads required registered dependencies.","code":""},{"path":"/reference/gridPage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a css grid based page — gridPage","text":"","code":"gridPage(..., title = NULL, fill_page = TRUE, dependency = bootstrapLib())"},{"path":"/reference/gridPage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a css grid based page — gridPage","text":"... Arguments passed gridPanel. title browser window title (defaults host URL page). fill_page Boolean value page automatically stretch match browser window height. dependency set web dependencies. value can htmlDependency, example shiny bootstrap dependency (default value) tagList different dependencies.","code":""},{"path":"/reference/gridPage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a css grid based page — gridPage","text":"UI definition can passed shinyUI function.","code":""},{"path":"/reference/gridPage.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create a css grid based page — gridPage","text":"See https://css-tricks.com/snippets/css/complete-guide-grid/ additional details using css grids.","code":""},{"path":[]},{"path":"/reference/gridPanel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a css grid based HTML tag — gridPanel","title":"Create a css grid based HTML tag — gridPanel","text":"Creates HTML tag automatically generates css style rules based css grid, depending given arguments. Functionality acts way generate css grid based HTML containers directly R without need write additional css rules directly.","code":""},{"path":"/reference/gridPanel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a css grid based HTML tag — gridPanel","text":"","code":"gridPanel(   ...,   template = NULL,   areas = NULL,   rows = NULL,   columns = NULL,   gap = NULL,   align_items = \"stretch\",   justify_items = \"stretch\",   auto_fill = TRUE,   breakpoint_system = getBreakpointSystem(),   id = generateID() )"},{"path":"/reference/gridPanel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a css grid based HTML tag — gridPanel","text":"... Tag attributes (named arguments) child elements (unnamed arguments names used areas). Named arguments treated additional html attribute values parent tag, unless name used areas attribute grid area name. Child elements may include combination tags objects, HTML strings, htmlDependencys. template name registered template use base grid, template object gridTemplate. areas list vectors area names, vector strings representing row grid. element contain names, per row, area grid. Expected values follow convention grid-template-areas css attribute. example c(\"area-1 area-1\", \"area-2 area-3\") list(c(\"area-1\", \"area-1\"), c(area-2\", \"area-3\")) valid representations 2x2 grid 3 named areas. Supports breakpoints. rows string css valid sizes separated space. vector sizes. example \"1fr 2fr\" c(\"1fr\", \"2fr\") valid representations 2 rows grid sizes. Follows convention grid-template-rows css attribute. provided existing space split equally accordingly areas defined areas. Supports breakpoints. columns string css valid sizes separated space. vector sizes. example \"1fr 2fr\" c(\"1fr\", \"2fr\") valid representations 2 columns grid sizes. Follows convention grid-template-columns css attribute. provided existing space split equally accordingly areas defined areas. Supports breakpoints. gap space elements panel. Controls space rows columns. Accepts css valid value, 2 values separated space (using different values row column spacing). Supports breakpoints. align_items cell behavior according align-items css property. Aligns grid items along block (column) axis. Accepts valid css align-items value (start | end | center | stretch). Supports breakpoints. justify_items cell behavior according justify-items css property. Aligns grid items along inline (row) axis. Accepts valid css justify-items value (start | end | center | stretch). Supports breakpoints. auto_fill panel stretch fit parent size (TRUE), size based children element sizes (FALSE). Supports breakpoints. breakpoint_system Breakpoint system use. id parent element id.","code":""},{"path":"/reference/gridPanel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a css grid based HTML tag — gridPanel","text":"HTML tagList.","code":""},{"path":"/reference/gridPanel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a css grid based HTML tag — gridPanel","text":"Behaves similar normal HTML tag, provides helping arguments simplify way grid css can created shiny.","code":""},{"path":"/reference/gridPanel.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create a css grid based HTML tag — gridPanel","text":"creating responsive layouts based css media rules, arguments allow named list can passed instead single value. names list can breakpoints available breakpoint_system argument. recommended define breakpoint system application globally UI definitions, breakpoint_system panel functions allows flexibility reusing components projects. See https://css-tricks.com/snippets/css/complete-guide-grid/ additional details using css grids. full list valid HTML attributes check visit https://www.w3schools.com/tags/ref_attributes.asp.","code":""},{"path":[]},{"path":"/reference/gridTemplate.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a grid template — gridTemplate","title":"Create a grid template — gridTemplate","text":"Creates imola template object future use. Depending given type, template available used argument panel page function specific type. Templates collections arguments can grouped stored later usage via \"template\" argument panel page functions.","code":""},{"path":"/reference/gridTemplate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a grid template — gridTemplate","text":"","code":"gridTemplate(   name,   type = c(\"grid\", \"flex\"),   ...,   breakpoint_system = getBreakpointSystem(),   description = NULL )"},{"path":"/reference/gridTemplate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a grid template — gridTemplate","text":"name string name identifies template. type type css grid template can used. Value must either \"grid\" \"flex\". ... Collection valid arguments can passed panel given type (see gridPanel flexPanel options) breakpoint_system Breakpoint system use. description Optional description information. template. Can used pass additional relevant information (example origin connected frameworks).","code":""},{"path":"/reference/gridTemplate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a grid template — gridTemplate","text":"template object.","code":""},{"path":"/reference/importBreakpointSystem.html","id":null,"dir":"Reference","previous_headings":"","what":"Import a breakpoint system — importBreakpointSystem","title":"Import a breakpoint system — importBreakpointSystem","text":"Imports breakpoint system file. Breakpoint systems can exported file format using exportBreakpointSystem.","code":""},{"path":"/reference/importBreakpointSystem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import a breakpoint system — importBreakpointSystem","text":"","code":"importBreakpointSystem(path)"},{"path":"/reference/importBreakpointSystem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import a breakpoint system — importBreakpointSystem","text":"path file path file import, including file name extension. file name must end .yaml extension.","code":""},{"path":"/reference/importBreakpointSystem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import a breakpoint system — importBreakpointSystem","text":"breakpoint system object.","code":""},{"path":"/reference/importTemplate.html","id":null,"dir":"Reference","previous_headings":"","what":"Import a template — importTemplate","title":"Import a template — importTemplate","text":"Imports template file. Templates can exported file format using exportTemplate","code":""},{"path":"/reference/importTemplate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import a template — importTemplate","text":"","code":"importTemplate(path)"},{"path":"/reference/importTemplate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import a template — importTemplate","text":"path file path file import, including file name extension. file name must end .yaml extension.","code":""},{"path":"/reference/importTemplate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import a template — importTemplate","text":"template object.","code":""},{"path":"/reference/is.breakpoint.html","id":null,"dir":"Reference","previous_headings":"","what":"Tests whether the object is an instance of a imola breakpoint. — is.breakpoint","title":"Tests whether the object is an instance of a imola breakpoint. — is.breakpoint","text":"Tests whether object instance imola breakpoint.","code":""},{"path":"/reference/is.breakpoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tests whether the object is an instance of a imola breakpoint. — is.breakpoint","text":"","code":"is.breakpoint(object)"},{"path":"/reference/is.breakpoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tests whether the object is an instance of a imola breakpoint. — is.breakpoint","text":"object R object.","code":""},{"path":"/reference/is.breakpoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tests whether the object is an instance of a imola breakpoint. — is.breakpoint","text":"TRUE FALSE depending object imola breakpoint.","code":""},{"path":"/reference/is.breakpointSystem.html","id":null,"dir":"Reference","previous_headings":"","what":"Tests whether the object is an instance of a imola breakpoint system. — is.breakpointSystem","title":"Tests whether the object is an instance of a imola breakpoint system. — is.breakpointSystem","text":"Tests whether object instance imola breakpoint system.","code":""},{"path":"/reference/is.breakpointSystem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tests whether the object is an instance of a imola breakpoint system. — is.breakpointSystem","text":"","code":"is.breakpointSystem(object)"},{"path":"/reference/is.breakpointSystem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tests whether the object is an instance of a imola breakpoint system. — is.breakpointSystem","text":"object R object.","code":""},{"path":"/reference/is.breakpointSystem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tests whether the object is an instance of a imola breakpoint system. — is.breakpointSystem","text":"TRUE FALSE depending object imola breakpoint system.","code":""},{"path":"/reference/is.template.html","id":null,"dir":"Reference","previous_headings":"","what":"Tests whether the object is an instance of a imola template. — is.template","title":"Tests whether the object is an instance of a imola template. — is.template","text":"Tests whether object instance imola template.","code":""},{"path":"/reference/is.template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tests whether the object is an instance of a imola template. — is.template","text":"","code":"is.template(object)"},{"path":"/reference/is.template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tests whether the object is an instance of a imola template. — is.template","text":"object R object.","code":""},{"path":"/reference/is.template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tests whether the object is an instance of a imola template. — is.template","text":"TRUE FALSE depending object imola template.","code":""},{"path":"/reference/listBreakpointSystems.html","id":null,"dir":"Reference","previous_headings":"","what":"List registered breakpoint systems — listBreakpointSystems","title":"List registered breakpoint systems — listBreakpointSystems","text":"Lists available breakpoint systems.","code":""},{"path":"/reference/listBreakpointSystems.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List registered breakpoint systems — listBreakpointSystems","text":"","code":"listBreakpointSystems()"},{"path":"/reference/listBreakpointSystems.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List registered breakpoint systems — listBreakpointSystems","text":"named list css templates specific values.","code":""},{"path":"/reference/listTemplates.html","id":null,"dir":"Reference","previous_headings":"","what":"List registered templates — listTemplates","title":"List registered templates — listTemplates","text":"Lists available grid flex templates. type given, returns templates given grid type.","code":""},{"path":"/reference/listTemplates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List registered templates — listTemplates","text":"","code":"listTemplates(type = NULL)"},{"path":"/reference/listTemplates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List registered templates — listTemplates","text":"type Optional argument type css templates return. value must either \"grid\" \"flex\". type given, templates types returned.","code":""},{"path":"/reference/listTemplates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List registered templates — listTemplates","text":"named list css templates specific values.","code":""},{"path":"/reference/makeTemplate.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns a imola template as an object for future use. Depending on the\r\ngiven type, the template will then be available to be passed as an\r\nargument to a panel or page function of that specific type. Templates are\r\ncollections of arguments that can be grouped and stored for later usage\r\nvia the ","title":"Returns a imola template as an object for future use. Depending on the\r\ngiven type, the template will then be available to be passed as an\r\nargument to a panel or page function of that specific type. Templates are\r\ncollections of arguments that can be grouped and stored for later usage\r\nvia the ","text":"Returns imola template object future use. Depending given type, template available passed argument panel page function specific type. Templates collections arguments can grouped stored later usage via \"template\" argument panel page functions.","code":""},{"path":"/reference/makeTemplate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns a imola template as an object for future use. Depending on the\r\ngiven type, the template will then be available to be passed as an\r\nargument to a panel or page function of that specific type. Templates are\r\ncollections of arguments that can be grouped and stored for later usage\r\nvia the ","text":"","code":"gridTemplate(type, ..., breakpoint_system = getBreakpointSystem())"},{"path":"/reference/makeTemplate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns a imola template as an object for future use. Depending on the\r\ngiven type, the template will then be available to be passed as an\r\nargument to a panel or page function of that specific type. Templates are\r\ncollections of arguments that can be grouped and stored for later usage\r\nvia the ","text":"type type css grid template can used ... Collection valid arguments can passed panel given type (see gridPanel() FlexPanel() options) breakpoint_system Optional breakpoint system use template. default simply use current active system built custom system can also passed. ca find built breakpoint systems getOption(\"imola.breakpoint.systems\")","code":""},{"path":"/reference/makeTemplate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns a imola template as an object for future use. Depending on the\r\ngiven type, the template will then be available to be passed as an\r\nargument to a panel or page function of that specific type. Templates are\r\ncollections of arguments that can be grouped and stored for later usage\r\nvia the ","text":"list template details","code":""},{"path":"/reference/mediaRuleTemplate.html","id":null,"dir":"Reference","previous_headings":"","what":"Create media rule template — mediaRuleTemplate","title":"Create media rule template — mediaRuleTemplate","text":"Creates valid glue::glue string template css media query. Used internally generate breakpoint specific wrapper.","code":""},{"path":"/reference/mediaRuleTemplate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create media rule template — mediaRuleTemplate","text":"","code":"mediaRuleTemplate(options)"},{"path":"/reference/mediaRuleTemplate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create media rule template — mediaRuleTemplate","text":"options options required template. valid values given, non media query template created instead.","code":""},{"path":"/reference/mediaRuleTemplate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create media rule template — mediaRuleTemplate","text":"valid glue::glue template string processed later.","code":""},{"path":"/reference/normalizeAttribute.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize a attribute — normalizeAttribute","title":"Normalize a attribute — normalizeAttribute","text":"Converts values attribute passed grid flex function normalized named list. nothing attribute already named list correct format.","code":""},{"path":"/reference/normalizeAttribute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize a attribute — normalizeAttribute","text":"","code":"normalizeAttribute(attribute, simplify = FALSE)"},{"path":"/reference/normalizeAttribute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize a attribute — normalizeAttribute","text":"attribute attribute value. simplify attribute value simplified single string.","code":""},{"path":"/reference/normalizeAttribute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize a attribute — normalizeAttribute","text":"named list.","code":""},{"path":"/reference/normalizeAttributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize a list of attributes — normalizeAttributes","title":"Normalize a list of attributes — normalizeAttributes","text":"Iterates list attributes applies normalizeAttribute .","code":""},{"path":"/reference/normalizeAttributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize a list of attributes — normalizeAttributes","text":"","code":"normalizeAttributes(attributes)"},{"path":"/reference/normalizeAttributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize a list of attributes — normalizeAttributes","text":"attributes named list attribute values.","code":""},{"path":"/reference/normalizeAttributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize a list of attributes — normalizeAttributes","text":"named list.","code":""},{"path":"/reference/print.imola.breakpoint.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom print function for a breakpoint object. — print.imola.breakpoint","title":"Custom print function for a breakpoint object. — print.imola.breakpoint","text":"Custom print function breakpoint object.","code":""},{"path":"/reference/print.imola.breakpoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom print function for a breakpoint object. — print.imola.breakpoint","text":"","code":"# S3 method for imola.breakpoint print(x, ...)"},{"path":"/reference/print.imola.breakpoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom print function for a breakpoint object. — print.imola.breakpoint","text":"x object print. ... Additional arguments.","code":""},{"path":"/reference/print.imola.breakpoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Custom print function for a breakpoint object. — print.imola.breakpoint","text":"return value, called side effects.","code":""},{"path":"/reference/print.imola.breakpoint.system.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom print function for a breakpoint system object. — print.imola.breakpoint.system","title":"Custom print function for a breakpoint system object. — print.imola.breakpoint.system","text":"Custom print function breakpoint system object.","code":""},{"path":"/reference/print.imola.breakpoint.system.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom print function for a breakpoint system object. — print.imola.breakpoint.system","text":"","code":"# S3 method for imola.breakpoint.system print(x, ...)"},{"path":"/reference/print.imola.breakpoint.system.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom print function for a breakpoint system object. — print.imola.breakpoint.system","text":"x object print. ... Additional arguments.","code":""},{"path":"/reference/print.imola.breakpoint.system.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Custom print function for a breakpoint system object. — print.imola.breakpoint.system","text":"return value, called side effects.","code":""},{"path":"/reference/print.imola.template.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom print function for a template object. — print.imola.template","title":"Custom print function for a template object. — print.imola.template","text":"Custom print function template object.","code":""},{"path":"/reference/print.imola.template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom print function for a template object. — print.imola.template","text":"","code":"# S3 method for imola.template print(x, ...)"},{"path":"/reference/print.imola.template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom print function for a template object. — print.imola.template","text":"x object print. ... Additional arguments.","code":""},{"path":"/reference/print.imola.template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Custom print function for a template object. — print.imola.template","text":"return value, called side effects.","code":""},{"path":"/reference/processContent.html","id":null,"dir":"Reference","previous_headings":"","what":"Process HTML content — processContent","title":"Process HTML content — processContent","text":"Adds css class HTML elements content named name areas vector names. allows content assigned grid areas via named argument still allowing generic HTML tag attributes used.","code":""},{"path":"/reference/processContent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process HTML content — processContent","text":"","code":"processContent(content, areas)"},{"path":"/reference/processContent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process HTML content — processContent","text":"content (named) list HTML elements. areas names content class added.","code":""},{"path":"/reference/processContent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process HTML content — processContent","text":"list HTML elements.","code":""},{"path":"/reference/readSettingsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Import a settings file — readSettingsFile","title":"Import a settings file — readSettingsFile","text":"Reads content yaml settings file package directory.","code":""},{"path":"/reference/readSettingsFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import a settings file — readSettingsFile","text":"","code":"readSettingsFile(file)"},{"path":"/reference/readSettingsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import a settings file — readSettingsFile","text":"file file name read. Settings files stored package installation directory include different settings options.","code":""},{"path":"/reference/readSettingsFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import a settings file — readSettingsFile","text":"list object containing content settings yaml file","code":""},{"path":"/reference/registerBreakpoint.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds a new breakpoint entry to the current active media breakpoints. — registerBreakpoint","title":"Adds a new breakpoint entry to the current active media breakpoints. — registerBreakpoint","text":"Adds new breakpoint entry current active media breakpoints.","code":""},{"path":"/reference/registerBreakpoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds a new breakpoint entry to the current active media breakpoints. — registerBreakpoint","text":"","code":"registerBreakpoint(name, min = NULL, max = NULL)"},{"path":"/reference/registerBreakpoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds a new breakpoint entry to the current active media breakpoints. — registerBreakpoint","text":"name name entry remove min minimum screen width (pixels) rule active max maximum screen width (pixels) rule active","code":""},{"path":"/reference/registerBreakpoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds a new breakpoint entry to the current active media breakpoints. — registerBreakpoint","text":"return value, called side effects","code":""},{"path":"/reference/registerBreakpointSystem.html","id":null,"dir":"Reference","previous_headings":"","what":"Register a breakpoint system — registerBreakpointSystem","title":"Register a breakpoint system — registerBreakpointSystem","text":"Registers breakpoint system object make available globally getOption(\"imola.breakpoint.systems\"). registered can retrieved anywhere using getBreakpointSystem.","code":""},{"path":"/reference/registerBreakpointSystem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register a breakpoint system — registerBreakpointSystem","text":"","code":"registerBreakpointSystem(system)"},{"path":"/reference/registerBreakpointSystem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register a breakpoint system — registerBreakpointSystem","text":"system breakpoint system object created breakpointSystem.","code":""},{"path":"/reference/registerBreakpointSystem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Register a breakpoint system — registerBreakpointSystem","text":"return value, called side effects.","code":""},{"path":"/reference/registerTemplate.html","id":null,"dir":"Reference","previous_headings":"","what":"Register a template — registerTemplate","title":"Register a template — registerTemplate","text":"Registers template object make available globally getOption(\"imola.templates\"). registered can retrieved anywhere using getTemplate.","code":""},{"path":"/reference/registerTemplate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register a template — registerTemplate","text":"","code":"registerTemplate(template)"},{"path":"/reference/registerTemplate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register a template — registerTemplate","text":"template template object generated gridTemplate.","code":""},{"path":"/reference/registerTemplate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Register a template — registerTemplate","text":"return value, called side effects.","code":""},{"path":"/reference/removeBreakpoint.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove a breakpoint from a breakpoint system — removeBreakpoint","title":"Remove a breakpoint from a breakpoint system — removeBreakpoint","text":"Removes breakpoint breakpoint system object name.","code":""},{"path":"/reference/removeBreakpoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove a breakpoint from a breakpoint system — removeBreakpoint","text":"","code":"removeBreakpoint(system, name)"},{"path":"/reference/removeBreakpoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove a breakpoint from a breakpoint system — removeBreakpoint","text":"system breakpoint system object created breakpointSystem. name string name breakpoint given system.","code":""},{"path":"/reference/removeBreakpoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove a breakpoint from a breakpoint system — removeBreakpoint","text":"breakpoint system object.","code":""},{"path":"/reference/setActiveBreakpointSystem.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the active breakpoint system — setActiveBreakpointSystem","title":"Set the active breakpoint system — setActiveBreakpointSystem","text":"Sets current globally active breakpoint system. active breakpoint system used grid function default system system provided argument.","code":""},{"path":"/reference/setActiveBreakpointSystem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the active breakpoint system — setActiveBreakpointSystem","text":"","code":"setActiveBreakpointSystem(system)"},{"path":"/reference/setActiveBreakpointSystem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the active breakpoint system — setActiveBreakpointSystem","text":"system string name registered breakpoint system, breakpoint system object generated breakpointSystem. breakpoint system object used, registered well.","code":""},{"path":"/reference/setActiveBreakpointSystem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the active breakpoint system — setActiveBreakpointSystem","text":"breakpoint system object.","code":""},{"path":"/reference/setBreakpointSystem.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets the current active media breakpoints. By default the default_system\r\nsetting values are used, but the list can be customized by using the\r\nregisterBreakpoint() and unregisterBreakpoint() functions. — setActiveBreakpointSystem","title":"Sets the current active media breakpoints. By default the default_system\r\nsetting values are used, but the list can be customized by using the\r\nregisterBreakpoint() and unregisterBreakpoint() functions. — setActiveBreakpointSystem","text":"Sets current active media breakpoints. default default_system setting values used, list can customized using registerBreakpoint() unregisterBreakpoint() functions.","code":""},{"path":"/reference/setBreakpointSystem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets the current active media breakpoints. By default the default_system\r\nsetting values are used, but the list can be customized by using the\r\nregisterBreakpoint() and unregisterBreakpoint() functions. — setActiveBreakpointSystem","text":"","code":"setActiveBreakpointSystem(system)"},{"path":"/reference/setBreakpointSystem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sets the current active media breakpoints. By default the default_system\r\nsetting values are used, but the list can be customized by using the\r\nregisterBreakpoint() and unregisterBreakpoint() functions. — setActiveBreakpointSystem","text":"system name media breakpoints system use. Existing systems can found getOption(\"imola.breakpoint.systems\")","code":""},{"path":"/reference/setBreakpointSystem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sets the current active media breakpoints. By default the default_system\r\nsetting values are used, but the list can be customized by using the\r\nregisterBreakpoint() and unregisterBreakpoint() functions. — setActiveBreakpointSystem","text":"named list media breakpoints options.","code":""},{"path":"/reference/stringCSSRule.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate a css template — stringCSSRule","title":"Evaluate a css template — stringCSSRule","text":"Applies CSS statement template stored package settings. templates use htmlTemplate format, meaning placeholders marked using placeholder convention. placeholder value passed named argument function using placeholder value name. Used primarily shorthand stringTemplate stored templates.","code":""},{"path":"/reference/stringCSSRule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate a css template — stringCSSRule","text":"","code":"stringCSSRule(template, ...)"},{"path":"/reference/stringCSSRule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate a css template — stringCSSRule","text":"template template name use. Available templates saved options, getOption(\"imola.settings\")$string_templates. ... Named arguments use template string. placeholders template must corresponding named argument.","code":""},{"path":"/reference/stringCSSRule.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate a css template — stringCSSRule","text":"valid CSS string.","code":""},{"path":"/reference/stringTemplate.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate a string template — stringTemplate","title":"Evaluate a string template — stringTemplate","text":"Processes string template htmlTemplate format valid string placeholders. string must use htmlTemplate format, meaning placeholders marked using placeholder convention.","code":""},{"path":"/reference/stringTemplate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate a string template — stringTemplate","text":"","code":"stringTemplate(string, ...)"},{"path":"/reference/stringTemplate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate a string template — stringTemplate","text":"string string template. Uses format htmlTemplate function shiny. placeholders template use placeholder format. ... Named arguments use template string. placeholders template string must corresponding named argument.","code":""},{"path":"/reference/stringTemplate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate a string template — stringTemplate","text":"string.","code":""},{"path":"/reference/unregisterBreakpoint.html","id":null,"dir":"Reference","previous_headings":"","what":"Allows removing an entry from the current activeBreakpoints. — unregisterBreakpoint","title":"Allows removing an entry from the current activeBreakpoints. — unregisterBreakpoint","text":"Allows removing entry current activeBreakpoints.","code":""},{"path":"/reference/unregisterBreakpoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Allows removing an entry from the current activeBreakpoints. — unregisterBreakpoint","text":"","code":"unregisterBreakpoint(name)"},{"path":"/reference/unregisterBreakpoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Allows removing an entry from the current activeBreakpoints. — unregisterBreakpoint","text":"name name entry remove","code":""},{"path":"/reference/unregisterBreakpoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Allows removing an entry from the current activeBreakpoints. — unregisterBreakpoint","text":"return value, called side effects","code":""},{"path":"/reference/unregisterBreakpointSystem.html","id":null,"dir":"Reference","previous_headings":"","what":"Unregister a breakpoint system — unregisterBreakpointSystem","title":"Unregister a breakpoint system — unregisterBreakpointSystem","text":"Removes globally registered breakpoint system getOption(\"imola.breakpoint.systems\").","code":""},{"path":"/reference/unregisterBreakpointSystem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unregister a breakpoint system — unregisterBreakpointSystem","text":"","code":"unregisterBreakpointSystem(name)"},{"path":"/reference/unregisterBreakpointSystem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unregister a breakpoint system — unregisterBreakpointSystem","text":"name string name registered breakpoint system. Registered systems available getOption(\"imola.breakpoint.systems\").","code":""},{"path":"/reference/unregisterBreakpointSystem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unregister a breakpoint system — unregisterBreakpointSystem","text":"return value, called side effects.","code":""},{"path":"/reference/unregisterTemplate.html","id":null,"dir":"Reference","previous_headings":"","what":"Unregister a template — unregisterTemplate","title":"Unregister a template — unregisterTemplate","text":"Removes globally registered template getOption(\"imola.templates\").","code":""},{"path":"/reference/unregisterTemplate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unregister a template — unregisterTemplate","text":"","code":"unregisterTemplate(name, type)"},{"path":"/reference/unregisterTemplate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unregister a template — unregisterTemplate","text":"name string name registered template. Registered templates available getOption(\"imola.templates\"). type type css grid template can used.","code":""},{"path":"/reference/unregisterTemplate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unregister a template — unregisterTemplate","text":"return value, called side effects.","code":""},{"path":"/reference/valueToCSS.html","id":null,"dir":"Reference","previous_headings":"","what":"Process Object to css — valueToCSS","title":"Process Object to css — valueToCSS","text":"Converts R List vector object valid css string. Used primarily convert normalized attribute values css values processing.","code":""},{"path":"/reference/valueToCSS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process Object to css — valueToCSS","text":"","code":"valueToCSS(value, property)"},{"path":"/reference/valueToCSS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process Object to css — valueToCSS","text":"value List vector values converted css property target css property value used.","code":""},{"path":"/reference/valueToCSS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process Object to css — valueToCSS","text":"string containing valid css value.","code":""}]
