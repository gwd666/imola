% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/flex.R
\name{flexPage}
\alias{flexPage}
\title{Create a flexbox based page}
\usage{
flexPage(..., title = NULL, fill_page = TRUE, dependency = bootstrapLib())
}
\arguments{
\item{...}{Tag attributes (named arguments) and children (unnamed arguments).
A named argument with an \code{NA} value is rendered as a boolean attributes.
Named arguments can be used to provide additional values to the container
of the grid.

For a full list of valid HTML attributes check visit
\url{https://www.w3schools.com/tags/ref_attributes.asp}.

Children may include any combination of:
\itemize{
\item Other tags objects
\item \code{\link[=HTML]{HTML()}} strings
\item \code{\link[=htmlDependency]{htmlDependency()}}s
\item Single-element atomic vectors
}}

\item{title}{The browser window title (defaults to the host URL of the page)}

\item{fill_page}{Flag to tell the page if it should adjust the page to
adjust and fill the browser window size}

\item{dependency}{The set of web dependencies. This value can be a
htmlDependency, for example the shiny bootstrap one (the default)
or a tagList with diferent dependencies}
}
\value{
A UI definition that can be passed to the \link{shinyUI} function.
}
\description{
Create a flexbox based page
}
\note{
See
\url{https://css-tricks.com/snippets/css/a-guide-to-flexbox/}
for additional details on using css flexbox
}
\examples{
if (interactive()) {
library(shiny)
library(imola)
ui <- flexPage(
  title = "A flex page",
  div(class = "area-1", "Area 1 content"),
  div(class = "area-2", "Area 2 content"),
  div(class = "area-3", "Area 3 content")
)

server <- function(input, output) {}
shinyApp(ui, server)
}
}
\seealso{
\code{\link[=flexPanel]{flexPanel()}}
}
\concept{flex functions}
\keyword{flex}
\keyword{page}
